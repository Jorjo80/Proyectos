// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="jacobi_HLS,hls_ip_2018_3,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.418020,HLS_SYN_LAT=158,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=37,HLS_SYN_FF=12360,HLS_SYN_LUT=18613,HLS_VERSION=2018_3}" *)

module jacobi_HLS (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        J_address0,
        J_ce0,
        J_q0,
        J_address1,
        J_ce1,
        J_q1,
        b_address0,
        b_ce0,
        b_q0,
        b_address1,
        b_ce1,
        b_q1,
        x_address0,
        x_ce0,
        x_we0,
        x_d0,
        x_address1,
        x_ce1,
        x_we1,
        x_d1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 159'd1;
parameter    ap_ST_fsm_state2 = 159'd2;
parameter    ap_ST_fsm_state3 = 159'd4;
parameter    ap_ST_fsm_state4 = 159'd8;
parameter    ap_ST_fsm_state5 = 159'd16;
parameter    ap_ST_fsm_state6 = 159'd32;
parameter    ap_ST_fsm_state7 = 159'd64;
parameter    ap_ST_fsm_state8 = 159'd128;
parameter    ap_ST_fsm_state9 = 159'd256;
parameter    ap_ST_fsm_state10 = 159'd512;
parameter    ap_ST_fsm_state11 = 159'd1024;
parameter    ap_ST_fsm_state12 = 159'd2048;
parameter    ap_ST_fsm_state13 = 159'd4096;
parameter    ap_ST_fsm_state14 = 159'd8192;
parameter    ap_ST_fsm_state15 = 159'd16384;
parameter    ap_ST_fsm_state16 = 159'd32768;
parameter    ap_ST_fsm_state17 = 159'd65536;
parameter    ap_ST_fsm_state18 = 159'd131072;
parameter    ap_ST_fsm_state19 = 159'd262144;
parameter    ap_ST_fsm_state20 = 159'd524288;
parameter    ap_ST_fsm_state21 = 159'd1048576;
parameter    ap_ST_fsm_state22 = 159'd2097152;
parameter    ap_ST_fsm_state23 = 159'd4194304;
parameter    ap_ST_fsm_state24 = 159'd8388608;
parameter    ap_ST_fsm_state25 = 159'd16777216;
parameter    ap_ST_fsm_state26 = 159'd33554432;
parameter    ap_ST_fsm_state27 = 159'd67108864;
parameter    ap_ST_fsm_state28 = 159'd134217728;
parameter    ap_ST_fsm_state29 = 159'd268435456;
parameter    ap_ST_fsm_state30 = 159'd536870912;
parameter    ap_ST_fsm_state31 = 159'd1073741824;
parameter    ap_ST_fsm_state32 = 159'd2147483648;
parameter    ap_ST_fsm_state33 = 159'd4294967296;
parameter    ap_ST_fsm_state34 = 159'd8589934592;
parameter    ap_ST_fsm_state35 = 159'd17179869184;
parameter    ap_ST_fsm_state36 = 159'd34359738368;
parameter    ap_ST_fsm_state37 = 159'd68719476736;
parameter    ap_ST_fsm_state38 = 159'd137438953472;
parameter    ap_ST_fsm_state39 = 159'd274877906944;
parameter    ap_ST_fsm_state40 = 159'd549755813888;
parameter    ap_ST_fsm_state41 = 159'd1099511627776;
parameter    ap_ST_fsm_state42 = 159'd2199023255552;
parameter    ap_ST_fsm_state43 = 159'd4398046511104;
parameter    ap_ST_fsm_state44 = 159'd8796093022208;
parameter    ap_ST_fsm_state45 = 159'd17592186044416;
parameter    ap_ST_fsm_state46 = 159'd35184372088832;
parameter    ap_ST_fsm_state47 = 159'd70368744177664;
parameter    ap_ST_fsm_state48 = 159'd140737488355328;
parameter    ap_ST_fsm_state49 = 159'd281474976710656;
parameter    ap_ST_fsm_state50 = 159'd562949953421312;
parameter    ap_ST_fsm_state51 = 159'd1125899906842624;
parameter    ap_ST_fsm_state52 = 159'd2251799813685248;
parameter    ap_ST_fsm_state53 = 159'd4503599627370496;
parameter    ap_ST_fsm_state54 = 159'd9007199254740992;
parameter    ap_ST_fsm_state55 = 159'd18014398509481984;
parameter    ap_ST_fsm_state56 = 159'd36028797018963968;
parameter    ap_ST_fsm_state57 = 159'd72057594037927936;
parameter    ap_ST_fsm_state58 = 159'd144115188075855872;
parameter    ap_ST_fsm_state59 = 159'd288230376151711744;
parameter    ap_ST_fsm_state60 = 159'd576460752303423488;
parameter    ap_ST_fsm_state61 = 159'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 159'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 159'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 159'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 159'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 159'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 159'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 159'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 159'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 159'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 159'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 159'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 159'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 159'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 159'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 159'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 159'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 159'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 159'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 159'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 159'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 159'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 159'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 159'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 159'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 159'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 159'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 159'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 159'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 159'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 159'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 159'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 159'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 159'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 159'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 159'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 159'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 159'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 159'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 159'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 159'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 159'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 159'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 159'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 159'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 159'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 159'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 159'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 159'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 159'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 159'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 159'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 159'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 159'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 159'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 159'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 159'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 159'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 159'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 159'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 159'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 159'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 159'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 159'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 159'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 159'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 159'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 159'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 159'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 159'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 159'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 159'd2722258935367507707706996859454145691648;
parameter    ap_ST_fsm_state133 = 159'd5444517870735015415413993718908291383296;
parameter    ap_ST_fsm_state134 = 159'd10889035741470030830827987437816582766592;
parameter    ap_ST_fsm_state135 = 159'd21778071482940061661655974875633165533184;
parameter    ap_ST_fsm_state136 = 159'd43556142965880123323311949751266331066368;
parameter    ap_ST_fsm_state137 = 159'd87112285931760246646623899502532662132736;
parameter    ap_ST_fsm_state138 = 159'd174224571863520493293247799005065324265472;
parameter    ap_ST_fsm_state139 = 159'd348449143727040986586495598010130648530944;
parameter    ap_ST_fsm_state140 = 159'd696898287454081973172991196020261297061888;
parameter    ap_ST_fsm_state141 = 159'd1393796574908163946345982392040522594123776;
parameter    ap_ST_fsm_state142 = 159'd2787593149816327892691964784081045188247552;
parameter    ap_ST_fsm_state143 = 159'd5575186299632655785383929568162090376495104;
parameter    ap_ST_fsm_state144 = 159'd11150372599265311570767859136324180752990208;
parameter    ap_ST_fsm_state145 = 159'd22300745198530623141535718272648361505980416;
parameter    ap_ST_fsm_state146 = 159'd44601490397061246283071436545296723011960832;
parameter    ap_ST_fsm_state147 = 159'd89202980794122492566142873090593446023921664;
parameter    ap_ST_fsm_state148 = 159'd178405961588244985132285746181186892047843328;
parameter    ap_ST_fsm_state149 = 159'd356811923176489970264571492362373784095686656;
parameter    ap_ST_fsm_state150 = 159'd713623846352979940529142984724747568191373312;
parameter    ap_ST_fsm_state151 = 159'd1427247692705959881058285969449495136382746624;
parameter    ap_ST_fsm_state152 = 159'd2854495385411919762116571938898990272765493248;
parameter    ap_ST_fsm_state153 = 159'd5708990770823839524233143877797980545530986496;
parameter    ap_ST_fsm_state154 = 159'd11417981541647679048466287755595961091061972992;
parameter    ap_ST_fsm_state155 = 159'd22835963083295358096932575511191922182123945984;
parameter    ap_ST_fsm_state156 = 159'd45671926166590716193865151022383844364247891968;
parameter    ap_ST_fsm_state157 = 159'd91343852333181432387730302044767688728495783936;
parameter    ap_ST_fsm_state158 = 159'd182687704666362864775460604089535377456991567872;
parameter    ap_ST_fsm_state159 = 159'd365375409332725729550921208179070754913983135744;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] J_address0;
output   J_ce0;
input  [31:0] J_q0;
output  [3:0] J_address1;
output   J_ce1;
input  [31:0] J_q1;
output  [1:0] b_address0;
output   b_ce0;
input  [31:0] b_q0;
output  [1:0] b_address1;
output   b_ce1;
input  [31:0] b_q1;
output  [3:0] x_address0;
output   x_ce0;
output   x_we0;
output  [31:0] x_d0;
output  [3:0] x_address1;
output   x_ce1;
output   x_we1;
output  [31:0] x_d1;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] J_address0;
reg J_ce0;
reg[3:0] J_address1;
reg J_ce1;
reg[1:0] b_address0;
reg b_ce0;
reg[1:0] b_address1;
reg b_ce1;
reg[3:0] x_address0;
reg x_ce0;
reg x_we0;
reg[31:0] x_d0;
reg[3:0] x_address1;
reg x_ce1;
reg x_we1;
reg[31:0] x_d1;

(* fsm_encoding = "none" *) reg   [158:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire   [63:0] grp_fu_356_p1;
reg   [63:0] reg_391;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state63;
wire   [63:0] grp_fu_360_p1;
reg   [63:0] reg_399;
wire   [63:0] grp_fu_346_p2;
reg   [63:0] reg_406;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state54;
wire   [63:0] grp_fu_333_p2;
reg   [63:0] reg_410;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state73;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state83;
wire    ap_CS_fsm_state88;
wire    ap_CS_fsm_state93;
wire    ap_CS_fsm_state98;
wire    ap_CS_fsm_state103;
wire    ap_CS_fsm_state108;
wire    ap_CS_fsm_state113;
wire    ap_CS_fsm_state118;
wire    ap_CS_fsm_state123;
wire    ap_CS_fsm_state128;
wire    ap_CS_fsm_state6;
wire   [63:0] grp_fu_364_p1;
reg   [63:0] tmp_6_0_1_reg_1035;
wire   [63:0] grp_fu_368_p1;
reg   [63:0] tmp_7_0_1_reg_1040;
wire    ap_CS_fsm_state11;
reg   [63:0] tmp_6_0_2_reg_1055;
reg   [63:0] tmp_7_0_2_reg_1060;
wire   [63:0] grp_fu_338_p2;
reg   [63:0] tmp_10_0_1_reg_1065;
wire    ap_CS_fsm_state13;
wire   [63:0] grp_fu_342_p2;
reg   [63:0] tmp_10_1_reg_1070;
reg   [63:0] tmp_10_0_2_reg_1075;
wire    ap_CS_fsm_state18;
reg   [63:0] tmp_10_0_3_reg_1080;
wire    ap_CS_fsm_state23;
wire   [63:0] grp_fu_351_p2;
reg   [63:0] x_assign_3_reg_1085;
reg   [0:0] p_Result_s_reg_1090;
wire    ap_CS_fsm_state45;
wire   [31:0] p_Val2_20_fu_538_p3;
reg   [31:0] p_Val2_20_reg_1095;
reg   [0:0] p_Result_3_reg_1101;
wire   [31:0] p_Val2_26_fu_667_p3;
reg   [31:0] p_Val2_26_reg_1106;
wire  signed [31:0] p_Val2_21_fu_680_p3;
reg  signed [31:0] p_Val2_21_reg_1112;
wire    ap_CS_fsm_state46;
wire  signed [31:0] p_Val2_27_fu_691_p3;
reg  signed [31:0] p_Val2_27_reg_1119;
wire   [31:0] tmp_4_fu_697_p2;
reg   [31:0] tmp_4_reg_1126;
wire    ap_CS_fsm_state47;
wire   [31:0] tmp_4_1_fu_701_p2;
reg   [31:0] tmp_4_1_reg_1131;
reg   [0:0] p_Result_1_reg_1136;
wire    ap_CS_fsm_state50;
wire   [31:0] p_Val2_22_fu_827_p3;
reg   [31:0] p_Val2_22_reg_1141;
wire  signed [31:0] p_Val2_23_fu_840_p3;
reg  signed [31:0] p_Val2_23_reg_1147;
wire    ap_CS_fsm_state51;
wire   [31:0] tmp_4_2_fu_846_p2;
reg   [31:0] tmp_4_2_reg_1154;
wire    ap_CS_fsm_state52;
reg   [0:0] p_Result_2_reg_1159;
wire    ap_CS_fsm_state55;
wire   [31:0] p_Val2_24_fu_972_p3;
reg   [31:0] p_Val2_24_reg_1164;
wire  signed [31:0] p_Val2_25_fu_985_p3;
reg  signed [31:0] p_Val2_25_reg_1170;
wire    ap_CS_fsm_state56;
wire   [31:0] tmp_4_3_fu_991_p2;
reg   [31:0] tmp_4_3_reg_1177;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
reg   [63:0] grp_fu_333_p0;
reg   [63:0] grp_fu_333_p1;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state74;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state84;
wire    ap_CS_fsm_state89;
wire    ap_CS_fsm_state94;
wire    ap_CS_fsm_state99;
wire    ap_CS_fsm_state104;
wire    ap_CS_fsm_state109;
wire    ap_CS_fsm_state114;
wire    ap_CS_fsm_state119;
wire    ap_CS_fsm_state124;
reg   [63:0] grp_fu_338_p0;
reg   [63:0] grp_fu_338_p1;
wire    ap_CS_fsm_state8;
reg   [63:0] grp_fu_346_p1;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state24;
reg   [31:0] grp_fu_356_p0;
wire    ap_CS_fsm_state48;
reg   [31:0] grp_fu_360_p0;
wire    ap_CS_fsm_state129;
wire   [63:0] p_Val2_s_fu_416_p1;
wire   [51:0] tmp_V_1_fu_438_p1;
wire   [53:0] mantissa_V_fu_442_p4;
wire   [10:0] tmp_V_fu_428_p4;
wire   [11:0] tmp_i_i_i_i_cast4_fu_456_p1;
wire   [11:0] sh_assign_fu_460_p2;
wire   [10:0] tmp_i_i_i_fu_474_p2;
wire   [0:0] isNeg_fu_466_p3;
wire  signed [11:0] tmp_i_i_i_cast_fu_480_p1;
wire   [11:0] ush_fu_484_p3;
wire  signed [31:0] sh_assign_2_cast_fu_492_p1;
wire   [53:0] tmp_i_i_i_cast_7_fu_500_p1;
wire   [136:0] mantissa_V_1_cast_fu_452_p1;
wire   [136:0] tmp_i_i_i_6_fu_496_p1;
wire   [53:0] r_V_fu_504_p2;
wire   [0:0] tmp_fu_516_p3;
wire   [136:0] r_V_1_fu_510_p2;
wire   [31:0] tmp_1_fu_524_p1;
wire   [31:0] tmp_2_fu_528_p4;
wire   [63:0] p_Val2_15_fu_546_p1;
wire   [51:0] tmp_V_7_fu_567_p1;
wire   [53:0] mantissa_V_3_fu_571_p4;
wire   [10:0] tmp_V_6_fu_557_p4;
wire   [11:0] tmp_i_i_i_i3_cast1_fu_585_p1;
wire   [11:0] sh_assign_9_fu_589_p2;
wire   [10:0] tmp_i_i_i3_fu_603_p2;
wire   [0:0] isNeg_3_fu_595_p3;
wire  signed [11:0] tmp_i_i_i3_cast_fu_609_p1;
wire   [11:0] ush_3_fu_613_p3;
wire  signed [31:0] sh_assign_11_cast_fu_621_p1;
wire   [53:0] tmp_i_i_i3_cast_13_fu_629_p1;
wire   [136:0] mantissa_V_7_cast_fu_581_p1;
wire   [136:0] tmp_i_i_i3_12_fu_625_p1;
wire   [53:0] r_V_6_fu_633_p2;
wire   [0:0] tmp_24_fu_645_p3;
wire   [136:0] r_V_7_fu_639_p2;
wire   [31:0] tmp_10_fu_653_p1;
wire   [31:0] tmp_11_fu_657_p4;
wire   [31:0] result_V_1_fu_675_p2;
wire   [31:0] result_V_7_fu_686_p2;
wire   [63:0] p_Val2_5_fu_705_p1;
wire   [51:0] tmp_V_3_fu_727_p1;
wire   [53:0] mantissa_V_1_fu_731_p4;
wire   [10:0] tmp_V_2_fu_717_p4;
wire   [11:0] tmp_i_i_i_i1_cast3_fu_745_p1;
wire   [11:0] sh_assign_3_fu_749_p2;
wire   [10:0] tmp_i_i_i1_fu_763_p2;
wire   [0:0] isNeg_1_fu_755_p3;
wire  signed [11:0] tmp_i_i_i1_cast_fu_769_p1;
wire   [11:0] ush_1_fu_773_p3;
wire  signed [31:0] sh_assign_5_cast_fu_781_p1;
wire   [53:0] tmp_i_i_i1_cast_9_fu_789_p1;
wire   [136:0] mantissa_V_3_cast_fu_741_p1;
wire   [136:0] tmp_i_i_i1_8_fu_785_p1;
wire   [53:0] r_V_2_fu_793_p2;
wire   [0:0] tmp_12_fu_805_p3;
wire   [136:0] r_V_3_fu_799_p2;
wire   [31:0] tmp_9_fu_813_p1;
wire   [31:0] tmp_s_fu_817_p4;
wire   [31:0] result_V_3_fu_835_p2;
wire   [63:0] p_Val2_10_fu_850_p1;
wire   [51:0] tmp_V_5_fu_872_p1;
wire   [53:0] mantissa_V_2_fu_876_p4;
wire   [10:0] tmp_V_4_fu_862_p4;
wire   [11:0] tmp_i_i_i_i2_cast2_fu_890_p1;
wire   [11:0] sh_assign_6_fu_894_p2;
wire   [10:0] tmp_i_i_i2_fu_908_p2;
wire   [0:0] isNeg_2_fu_900_p3;
wire  signed [11:0] tmp_i_i_i2_cast_fu_914_p1;
wire   [11:0] ush_2_fu_918_p3;
wire  signed [31:0] sh_assign_8_cast_fu_926_p1;
wire   [53:0] tmp_i_i_i2_cast_11_fu_934_p1;
wire   [136:0] mantissa_V_5_cast_fu_886_p1;
wire   [136:0] tmp_i_i_i2_10_fu_930_p1;
wire   [53:0] r_V_4_fu_938_p2;
wire   [0:0] tmp_20_fu_950_p3;
wire   [136:0] r_V_5_fu_944_p2;
wire   [31:0] tmp_3_fu_958_p1;
wire   [31:0] tmp_8_fu_962_p4;
wire   [31:0] result_V_5_fu_980_p2;
wire   [63:0] grp_fu_374_p2;
wire    ap_CS_fsm_state159;
reg   [158:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 159'd1;
end

jacobi_HLS_dadd_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
jacobi_HLS_dadd_6bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_333_p0),
    .din1(grp_fu_333_p1),
    .ce(1'b1),
    .dout(grp_fu_333_p2)
);

jacobi_HLS_dmul_6cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
jacobi_HLS_dmul_6cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_338_p0),
    .din1(grp_fu_338_p1),
    .ce(1'b1),
    .dout(grp_fu_338_p2)
);

jacobi_HLS_dmul_6cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
jacobi_HLS_dmul_6cud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_391),
    .din1(reg_399),
    .ce(1'b1),
    .dout(grp_fu_342_p2)
);

jacobi_HLS_ddiv_6dEe #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
jacobi_HLS_ddiv_6dEe_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(grp_fu_346_p1),
    .ce(1'b1),
    .dout(grp_fu_346_p2)
);

jacobi_HLS_ddiv_6dEe #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
jacobi_HLS_ddiv_6dEe_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd4607182418800017408),
    .din1(tmp_10_1_reg_1070),
    .ce(1'b1),
    .dout(grp_fu_351_p2)
);

jacobi_HLS_sitodpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
jacobi_HLS_sitodpeOg_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_356_p0),
    .ce(1'b1),
    .dout(grp_fu_356_p1)
);

jacobi_HLS_sitodpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
jacobi_HLS_sitodpeOg_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_360_p0),
    .ce(1'b1),
    .dout(grp_fu_360_p1)
);

jacobi_HLS_sitodpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
jacobi_HLS_sitodpeOg_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(J_q1),
    .ce(1'b1),
    .dout(grp_fu_364_p1)
);

jacobi_HLS_sitodpeOg #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
jacobi_HLS_sitodpeOg_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_q1),
    .ce(1'b1),
    .dout(grp_fu_368_p1)
);

jacobi_HLS_dsqrt_fYi #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
jacobi_HLS_dsqrt_fYi_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(reg_410),
    .ce(1'b1),
    .dout(grp_fu_374_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        p_Result_1_reg_1136 <= p_Val2_5_fu_705_p1[32'd63];
        p_Val2_22_reg_1141 <= p_Val2_22_fu_827_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        p_Result_2_reg_1159 <= p_Val2_10_fu_850_p1[32'd63];
        p_Val2_24_reg_1164 <= p_Val2_24_fu_972_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        p_Result_3_reg_1101 <= p_Val2_15_fu_546_p1[32'd63];
        p_Result_s_reg_1090 <= p_Val2_s_fu_416_p1[32'd63];
        p_Val2_20_reg_1095 <= p_Val2_20_fu_538_p3;
        p_Val2_26_reg_1106 <= p_Val2_26_fu_667_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        p_Val2_21_reg_1112 <= p_Val2_21_fu_680_p3;
        p_Val2_27_reg_1119 <= p_Val2_27_fu_691_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        p_Val2_23_reg_1147 <= p_Val2_23_fu_840_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        p_Val2_25_reg_1170 <= p_Val2_25_fu_985_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_391 <= grp_fu_356_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_399 <= grp_fu_360_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state44))) begin
        reg_406 <= grp_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state128) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state118) | (1'b1 == ap_CS_fsm_state113) | (1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state98) | (1'b1 == ap_CS_fsm_state93) | (1'b1 == ap_CS_fsm_state88) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state73) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state58))) begin
        reg_410 <= grp_fu_333_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_10_0_1_reg_1065 <= grp_fu_338_p2;
        tmp_10_1_reg_1070 <= grp_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_10_0_2_reg_1075 <= grp_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        tmp_10_0_3_reg_1080 <= grp_fu_338_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        tmp_4_1_reg_1131 <= tmp_4_1_fu_701_p2;
        tmp_4_reg_1126 <= tmp_4_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        tmp_4_2_reg_1154 <= tmp_4_2_fu_846_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        tmp_4_3_reg_1177 <= tmp_4_3_fu_991_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_6_0_1_reg_1035 <= grp_fu_364_p1;
        tmp_7_0_1_reg_1040 <= grp_fu_368_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_6_0_2_reg_1055 <= grp_fu_356_p1;
        tmp_7_0_2_reg_1060 <= grp_fu_360_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        x_assign_3_reg_1085 <= grp_fu_351_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        J_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        J_address0 = 64'd18446744073709551612;
    end else begin
        J_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        J_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        J_address1 = 64'd1;
    end else begin
        J_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        J_ce0 = 1'b1;
    end else begin
        J_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        J_ce1 = 1'b1;
    end else begin
        J_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state159)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        b_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_address0 = 64'd0;
    end else begin
        b_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        b_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        b_address1 = 64'd1;
    end else begin
        b_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        b_ce0 = 1'b1;
    end else begin
        b_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        b_ce1 = 1'b1;
    end else begin
        b_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_333_p0 = reg_410;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_333_p0 = reg_391;
    end else begin
        grp_fu_333_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state124) | (1'b1 == ap_CS_fsm_state119) | (1'b1 == ap_CS_fsm_state114) | (1'b1 == ap_CS_fsm_state109) | (1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state94) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state69))) begin
        grp_fu_333_p1 = 64'd4607182418800017408;
    end else if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_fu_333_p1 = reg_391;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_333_p1 = reg_399;
    end else begin
        grp_fu_333_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_338_p0 = reg_391;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_338_p0 = tmp_6_0_2_reg_1055;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_338_p0 = tmp_6_0_1_reg_1035;
    end else begin
        grp_fu_338_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_338_p1 = reg_399;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_338_p1 = tmp_7_0_2_reg_1060;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_338_p1 = tmp_7_0_1_reg_1040;
    end else begin
        grp_fu_338_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_fu_346_p1 = tmp_10_0_3_reg_1080;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_346_p1 = tmp_10_0_2_reg_1075;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_346_p1 = tmp_10_0_1_reg_1065;
    end else begin
        grp_fu_346_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_356_p0 = tmp_4_3_reg_1177;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_356_p0 = tmp_4_2_reg_1154;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_356_p0 = tmp_4_reg_1126;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_356_p0 = J_q1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_356_p0 = J_q0;
    end else begin
        grp_fu_356_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_360_p0 = tmp_4_1_reg_1131;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_360_p0 = b_q1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_360_p0 = b_q0;
    end else begin
        grp_fu_360_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        x_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        x_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        x_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        x_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        x_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        x_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        x_address0 = 64'd4;
    end else begin
        x_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        x_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        x_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        x_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        x_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        x_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        x_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        x_address1 = 64'd5;
    end else begin
        x_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44))) begin
        x_ce0 = 1'b1;
    end else begin
        x_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44))) begin
        x_ce1 = 1'b1;
    end else begin
        x_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        x_d0 = p_Val2_23_reg_1147;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_d0 = p_Val2_27_reg_1119;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44))) begin
        x_d0 = 32'd1;
    end else begin
        x_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        x_d1 = p_Val2_25_reg_1170;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        x_d1 = p_Val2_21_reg_1112;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44))) begin
        x_d1 = 32'd1;
    end else begin
        x_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44))) begin
        x_we0 = 1'b1;
    end else begin
        x_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44))) begin
        x_we1 = 1'b1;
    end else begin
        x_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state133;
        end
        ap_ST_fsm_state133 : begin
            ap_NS_fsm = ap_ST_fsm_state134;
        end
        ap_ST_fsm_state134 : begin
            ap_NS_fsm = ap_ST_fsm_state135;
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            ap_NS_fsm = ap_ST_fsm_state140;
        end
        ap_ST_fsm_state140 : begin
            ap_NS_fsm = ap_ST_fsm_state141;
        end
        ap_ST_fsm_state141 : begin
            ap_NS_fsm = ap_ST_fsm_state142;
        end
        ap_ST_fsm_state142 : begin
            ap_NS_fsm = ap_ST_fsm_state143;
        end
        ap_ST_fsm_state143 : begin
            ap_NS_fsm = ap_ST_fsm_state144;
        end
        ap_ST_fsm_state144 : begin
            ap_NS_fsm = ap_ST_fsm_state145;
        end
        ap_ST_fsm_state145 : begin
            ap_NS_fsm = ap_ST_fsm_state146;
        end
        ap_ST_fsm_state146 : begin
            ap_NS_fsm = ap_ST_fsm_state147;
        end
        ap_ST_fsm_state147 : begin
            ap_NS_fsm = ap_ST_fsm_state148;
        end
        ap_ST_fsm_state148 : begin
            ap_NS_fsm = ap_ST_fsm_state149;
        end
        ap_ST_fsm_state149 : begin
            ap_NS_fsm = ap_ST_fsm_state150;
        end
        ap_ST_fsm_state150 : begin
            ap_NS_fsm = ap_ST_fsm_state151;
        end
        ap_ST_fsm_state151 : begin
            ap_NS_fsm = ap_ST_fsm_state152;
        end
        ap_ST_fsm_state152 : begin
            ap_NS_fsm = ap_ST_fsm_state153;
        end
        ap_ST_fsm_state153 : begin
            ap_NS_fsm = ap_ST_fsm_state154;
        end
        ap_ST_fsm_state154 : begin
            ap_NS_fsm = ap_ST_fsm_state155;
        end
        ap_ST_fsm_state155 : begin
            ap_NS_fsm = ap_ST_fsm_state156;
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state157;
        end
        ap_ST_fsm_state157 : begin
            ap_NS_fsm = ap_ST_fsm_state158;
        end
        ap_ST_fsm_state158 : begin
            ap_NS_fsm = ap_ST_fsm_state159;
        end
        ap_ST_fsm_state159 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state114 = ap_CS_fsm[32'd113];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd117];

assign ap_CS_fsm_state119 = ap_CS_fsm[32'd118];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd122];

assign ap_CS_fsm_state124 = ap_CS_fsm[32'd123];

assign ap_CS_fsm_state128 = ap_CS_fsm[32'd127];

assign ap_CS_fsm_state129 = ap_CS_fsm[32'd128];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state159 = ap_CS_fsm[32'd158];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state88 = ap_CS_fsm[32'd87];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_return = grp_fu_374_p2;

assign isNeg_1_fu_755_p3 = sh_assign_3_fu_749_p2[32'd11];

assign isNeg_2_fu_900_p3 = sh_assign_6_fu_894_p2[32'd11];

assign isNeg_3_fu_595_p3 = sh_assign_9_fu_589_p2[32'd11];

assign isNeg_fu_466_p3 = sh_assign_fu_460_p2[32'd11];

assign mantissa_V_1_cast_fu_452_p1 = mantissa_V_fu_442_p4;

assign mantissa_V_1_fu_731_p4 = {{{{1'd1}, {tmp_V_3_fu_727_p1}}}, {1'd0}};

assign mantissa_V_2_fu_876_p4 = {{{{1'd1}, {tmp_V_5_fu_872_p1}}}, {1'd0}};

assign mantissa_V_3_cast_fu_741_p1 = mantissa_V_1_fu_731_p4;

assign mantissa_V_3_fu_571_p4 = {{{{1'd1}, {tmp_V_7_fu_567_p1}}}, {1'd0}};

assign mantissa_V_5_cast_fu_886_p1 = mantissa_V_2_fu_876_p4;

assign mantissa_V_7_cast_fu_581_p1 = mantissa_V_3_fu_571_p4;

assign mantissa_V_fu_442_p4 = {{{{1'd1}, {tmp_V_1_fu_438_p1}}}, {1'd0}};

assign p_Val2_10_fu_850_p1 = reg_406;

assign p_Val2_15_fu_546_p1 = x_assign_3_reg_1085;

assign p_Val2_20_fu_538_p3 = ((isNeg_fu_466_p3[0:0] === 1'b1) ? tmp_1_fu_524_p1 : tmp_2_fu_528_p4);

assign p_Val2_21_fu_680_p3 = ((p_Result_s_reg_1090[0:0] === 1'b1) ? result_V_1_fu_675_p2 : p_Val2_20_reg_1095);

assign p_Val2_22_fu_827_p3 = ((isNeg_1_fu_755_p3[0:0] === 1'b1) ? tmp_9_fu_813_p1 : tmp_s_fu_817_p4);

assign p_Val2_23_fu_840_p3 = ((p_Result_1_reg_1136[0:0] === 1'b1) ? result_V_3_fu_835_p2 : p_Val2_22_reg_1141);

assign p_Val2_24_fu_972_p3 = ((isNeg_2_fu_900_p3[0:0] === 1'b1) ? tmp_3_fu_958_p1 : tmp_8_fu_962_p4);

assign p_Val2_25_fu_985_p3 = ((p_Result_2_reg_1159[0:0] === 1'b1) ? result_V_5_fu_980_p2 : p_Val2_24_reg_1164);

assign p_Val2_26_fu_667_p3 = ((isNeg_3_fu_595_p3[0:0] === 1'b1) ? tmp_10_fu_653_p1 : tmp_11_fu_657_p4);

assign p_Val2_27_fu_691_p3 = ((p_Result_3_reg_1101[0:0] === 1'b1) ? result_V_7_fu_686_p2 : p_Val2_26_reg_1106);

assign p_Val2_5_fu_705_p1 = reg_406;

assign p_Val2_s_fu_416_p1 = reg_406;

assign r_V_1_fu_510_p2 = mantissa_V_1_cast_fu_452_p1 << tmp_i_i_i_6_fu_496_p1;

assign r_V_2_fu_793_p2 = mantissa_V_1_fu_731_p4 >> tmp_i_i_i1_cast_9_fu_789_p1;

assign r_V_3_fu_799_p2 = mantissa_V_3_cast_fu_741_p1 << tmp_i_i_i1_8_fu_785_p1;

assign r_V_4_fu_938_p2 = mantissa_V_2_fu_876_p4 >> tmp_i_i_i2_cast_11_fu_934_p1;

assign r_V_5_fu_944_p2 = mantissa_V_5_cast_fu_886_p1 << tmp_i_i_i2_10_fu_930_p1;

assign r_V_6_fu_633_p2 = mantissa_V_3_fu_571_p4 >> tmp_i_i_i3_cast_13_fu_629_p1;

assign r_V_7_fu_639_p2 = mantissa_V_7_cast_fu_581_p1 << tmp_i_i_i3_12_fu_625_p1;

assign r_V_fu_504_p2 = mantissa_V_fu_442_p4 >> tmp_i_i_i_cast_7_fu_500_p1;

assign result_V_1_fu_675_p2 = (32'd0 - p_Val2_20_reg_1095);

assign result_V_3_fu_835_p2 = (32'd0 - p_Val2_22_reg_1141);

assign result_V_5_fu_980_p2 = (32'd0 - p_Val2_24_reg_1164);

assign result_V_7_fu_686_p2 = (32'd0 - p_Val2_26_reg_1106);

assign sh_assign_11_cast_fu_621_p1 = $signed(ush_3_fu_613_p3);

assign sh_assign_2_cast_fu_492_p1 = $signed(ush_fu_484_p3);

assign sh_assign_3_fu_749_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i1_cast3_fu_745_p1));

assign sh_assign_5_cast_fu_781_p1 = $signed(ush_1_fu_773_p3);

assign sh_assign_6_fu_894_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i2_cast2_fu_890_p1));

assign sh_assign_8_cast_fu_926_p1 = $signed(ush_2_fu_918_p3);

assign sh_assign_9_fu_589_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i3_cast1_fu_585_p1));

assign sh_assign_fu_460_p2 = ($signed(12'd3073) + $signed(tmp_i_i_i_i_cast4_fu_456_p1));

assign tmp_10_fu_653_p1 = tmp_24_fu_645_p3;

assign tmp_11_fu_657_p4 = {{r_V_7_fu_639_p2[84:53]}};

assign tmp_12_fu_805_p3 = r_V_2_fu_793_p2[32'd53];

assign tmp_1_fu_524_p1 = tmp_fu_516_p3;

assign tmp_20_fu_950_p3 = r_V_4_fu_938_p2[32'd53];

assign tmp_24_fu_645_p3 = r_V_6_fu_633_p2[32'd53];

assign tmp_2_fu_528_p4 = {{r_V_1_fu_510_p2[84:53]}};

assign tmp_3_fu_958_p1 = tmp_20_fu_950_p3;

assign tmp_4_1_fu_701_p2 = ($signed(p_Val2_21_reg_1112) * $signed(p_Val2_21_reg_1112));

assign tmp_4_2_fu_846_p2 = ($signed(p_Val2_23_reg_1147) * $signed(p_Val2_23_reg_1147));

assign tmp_4_3_fu_991_p2 = ($signed(p_Val2_25_reg_1170) * $signed(p_Val2_25_reg_1170));

assign tmp_4_fu_697_p2 = ($signed(p_Val2_27_reg_1119) * $signed(p_Val2_27_reg_1119));

assign tmp_8_fu_962_p4 = {{r_V_5_fu_944_p2[84:53]}};

assign tmp_9_fu_813_p1 = tmp_12_fu_805_p3;

assign tmp_V_1_fu_438_p1 = p_Val2_s_fu_416_p1[51:0];

assign tmp_V_2_fu_717_p4 = {{p_Val2_5_fu_705_p1[62:52]}};

assign tmp_V_3_fu_727_p1 = p_Val2_5_fu_705_p1[51:0];

assign tmp_V_4_fu_862_p4 = {{p_Val2_10_fu_850_p1[62:52]}};

assign tmp_V_5_fu_872_p1 = p_Val2_10_fu_850_p1[51:0];

assign tmp_V_6_fu_557_p4 = {{p_Val2_15_fu_546_p1[62:52]}};

assign tmp_V_7_fu_567_p1 = p_Val2_15_fu_546_p1[51:0];

assign tmp_V_fu_428_p4 = {{p_Val2_s_fu_416_p1[62:52]}};

assign tmp_fu_516_p3 = r_V_fu_504_p2[32'd53];

assign tmp_i_i_i1_8_fu_785_p1 = $unsigned(sh_assign_5_cast_fu_781_p1);

assign tmp_i_i_i1_cast_9_fu_789_p1 = $unsigned(sh_assign_5_cast_fu_781_p1);

assign tmp_i_i_i1_cast_fu_769_p1 = $signed(tmp_i_i_i1_fu_763_p2);

assign tmp_i_i_i1_fu_763_p2 = (11'd1023 - tmp_V_2_fu_717_p4);

assign tmp_i_i_i2_10_fu_930_p1 = $unsigned(sh_assign_8_cast_fu_926_p1);

assign tmp_i_i_i2_cast_11_fu_934_p1 = $unsigned(sh_assign_8_cast_fu_926_p1);

assign tmp_i_i_i2_cast_fu_914_p1 = $signed(tmp_i_i_i2_fu_908_p2);

assign tmp_i_i_i2_fu_908_p2 = (11'd1023 - tmp_V_4_fu_862_p4);

assign tmp_i_i_i3_12_fu_625_p1 = $unsigned(sh_assign_11_cast_fu_621_p1);

assign tmp_i_i_i3_cast_13_fu_629_p1 = $unsigned(sh_assign_11_cast_fu_621_p1);

assign tmp_i_i_i3_cast_fu_609_p1 = $signed(tmp_i_i_i3_fu_603_p2);

assign tmp_i_i_i3_fu_603_p2 = (11'd1023 - tmp_V_6_fu_557_p4);

assign tmp_i_i_i_6_fu_496_p1 = $unsigned(sh_assign_2_cast_fu_492_p1);

assign tmp_i_i_i_cast_7_fu_500_p1 = $unsigned(sh_assign_2_cast_fu_492_p1);

assign tmp_i_i_i_cast_fu_480_p1 = $signed(tmp_i_i_i_fu_474_p2);

assign tmp_i_i_i_fu_474_p2 = (11'd1023 - tmp_V_fu_428_p4);

assign tmp_i_i_i_i1_cast3_fu_745_p1 = tmp_V_2_fu_717_p4;

assign tmp_i_i_i_i2_cast2_fu_890_p1 = tmp_V_4_fu_862_p4;

assign tmp_i_i_i_i3_cast1_fu_585_p1 = tmp_V_6_fu_557_p4;

assign tmp_i_i_i_i_cast4_fu_456_p1 = tmp_V_fu_428_p4;

assign tmp_s_fu_817_p4 = {{r_V_3_fu_799_p2[84:53]}};

assign ush_1_fu_773_p3 = ((isNeg_1_fu_755_p3[0:0] === 1'b1) ? tmp_i_i_i1_cast_fu_769_p1 : sh_assign_3_fu_749_p2);

assign ush_2_fu_918_p3 = ((isNeg_2_fu_900_p3[0:0] === 1'b1) ? tmp_i_i_i2_cast_fu_914_p1 : sh_assign_6_fu_894_p2);

assign ush_3_fu_613_p3 = ((isNeg_3_fu_595_p3[0:0] === 1'b1) ? tmp_i_i_i3_cast_fu_609_p1 : sh_assign_9_fu_589_p2);

assign ush_fu_484_p3 = ((isNeg_fu_466_p3[0:0] === 1'b1) ? tmp_i_i_i_cast_fu_480_p1 : sh_assign_fu_460_p2);

endmodule //jacobi_HLS
