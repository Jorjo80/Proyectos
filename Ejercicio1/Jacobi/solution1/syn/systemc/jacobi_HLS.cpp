// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "jacobi_HLS.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic jacobi_HLS::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic jacobi_HLS::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state1 = "1";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state2 = "10";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state3 = "100";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state4 = "1000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state5 = "10000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state6 = "100000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state7 = "1000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state8 = "10000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state9 = "100000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state10 = "1000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state11 = "10000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state12 = "100000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<63> jacobi_HLS::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> jacobi_HLS::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> jacobi_HLS::ap_const_lv32_9 = "1001";
const sc_lv<1> jacobi_HLS::ap_const_lv1_1 = "1";
const sc_lv<32> jacobi_HLS::ap_const_lv32_15 = "10101";
const sc_lv<32> jacobi_HLS::ap_const_lv32_10 = "10000";
const sc_lv<32> jacobi_HLS::ap_const_lv32_1 = "1";
const sc_lv<32> jacobi_HLS::ap_const_lv32_2 = "10";
const sc_lv<32> jacobi_HLS::ap_const_lv32_3 = "11";
const sc_lv<32> jacobi_HLS::ap_const_lv32_4 = "100";
const sc_lv<1> jacobi_HLS::ap_const_lv1_0 = "0";
const sc_lv<32> jacobi_HLS::ap_const_lv32_A = "1010";
const sc_lv<32> jacobi_HLS::ap_const_lv32_B = "1011";
const sc_lv<32> jacobi_HLS::ap_const_lv32_F = "1111";
const sc_lv<32> jacobi_HLS::ap_const_lv32_1B = "11011";
const sc_lv<32> jacobi_HLS::ap_const_lv32_3A = "111010";
const sc_lv<32> jacobi_HLS::ap_const_lv32_3B = "111011";
const sc_lv<32> jacobi_HLS::ap_const_lv32_3D = "111101";
const sc_lv<5> jacobi_HLS::ap_const_lv5_0 = "00000";
const sc_lv<31> jacobi_HLS::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<32> jacobi_HLS::ap_const_lv32_3C = "111100";
const sc_lv<64> jacobi_HLS::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> jacobi_HLS::ap_const_lv32_3E = "111110";
const sc_lv<32> jacobi_HLS::ap_const_lv32_5 = "101";
const sc_lv<32> jacobi_HLS::ap_const_lv32_11 = "10001";
const sc_lv<32> jacobi_HLS::ap_const_lv32_16 = "10110";
const sc_lv<64> jacobi_HLS::ap_const_lv64_3FF0000000000000 = "11111111110000000000000000000000000000000000000000000000000000";
const sc_lv<32> jacobi_HLS::ap_const_lv32_1C = "11100";
const sc_lv<5> jacobi_HLS::ap_const_lv5_10 = "10000";
const sc_lv<5> jacobi_HLS::ap_const_lv5_1 = "1";
const sc_lv<31> jacobi_HLS::ap_const_lv31_1 = "1";
const sc_lv<4> jacobi_HLS::ap_const_lv4_F = "1111";
const sc_lv<2> jacobi_HLS::ap_const_lv2_0 = "00";
const sc_lv<32> jacobi_HLS::ap_const_lv32_3F = "111111";
const sc_lv<32> jacobi_HLS::ap_const_lv32_34 = "110100";
const sc_lv<12> jacobi_HLS::ap_const_lv12_C01 = "110000000001";
const sc_lv<11> jacobi_HLS::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> jacobi_HLS::ap_const_lv32_35 = "110101";
const sc_lv<32> jacobi_HLS::ap_const_lv32_54 = "1010100";
const sc_lv<2> jacobi_HLS::ap_const_lv2_1 = "1";
const bool jacobi_HLS::ap_const_boolean_1 = true;

jacobi_HLS::jacobi_HLS(sc_module_name name) : sc_module(name), mVcdFile(0) {
    x_new_U = new jacobi_HLS_x_new("x_new_U");
    x_new_U->clk(ap_clk);
    x_new_U->reset(ap_rst);
    x_new_U->address0(x_new_address0);
    x_new_U->ce0(x_new_ce0);
    x_new_U->we0(x_new_we0);
    x_new_U->d0(x_new_d0);
    x_new_U->q0(x_new_q0);
    jacobi_HLS_dadddsbkb_U1 = new jacobi_HLS_dadddsbkb<1,5,64,64,64>("jacobi_HLS_dadddsbkb_U1");
    jacobi_HLS_dadddsbkb_U1->clk(ap_clk);
    jacobi_HLS_dadddsbkb_U1->reset(ap_rst);
    jacobi_HLS_dadddsbkb_U1->din0(grp_fu_235_p0);
    jacobi_HLS_dadddsbkb_U1->din1(grp_fu_235_p1);
    jacobi_HLS_dadddsbkb_U1->opcode(grp_fu_235_opcode);
    jacobi_HLS_dadddsbkb_U1->ce(ap_var_for_const0);
    jacobi_HLS_dadddsbkb_U1->dout(grp_fu_235_p2);
    jacobi_HLS_dmul_6cud_U2 = new jacobi_HLS_dmul_6cud<1,6,64,64,64>("jacobi_HLS_dmul_6cud_U2");
    jacobi_HLS_dmul_6cud_U2->clk(ap_clk);
    jacobi_HLS_dmul_6cud_U2->reset(ap_rst);
    jacobi_HLS_dmul_6cud_U2->din0(reg_261);
    jacobi_HLS_dmul_6cud_U2->din1(reg_256);
    jacobi_HLS_dmul_6cud_U2->ce(ap_var_for_const0);
    jacobi_HLS_dmul_6cud_U2->dout(grp_fu_242_p2);
    jacobi_HLS_ddiv_6dEe_U3 = new jacobi_HLS_ddiv_6dEe<1,31,64,64,64>("jacobi_HLS_ddiv_6dEe_U3");
    jacobi_HLS_ddiv_6dEe_U3->clk(ap_clk);
    jacobi_HLS_ddiv_6dEe_U3->reset(ap_rst);
    jacobi_HLS_ddiv_6dEe_U3->din0(ap_var_for_const1);
    jacobi_HLS_ddiv_6dEe_U3->din1(tmp_8_reg_624);
    jacobi_HLS_ddiv_6dEe_U3->ce(ap_var_for_const0);
    jacobi_HLS_ddiv_6dEe_U3->dout(grp_fu_246_p2);
    jacobi_HLS_sitodpeOg_U4 = new jacobi_HLS_sitodpeOg<1,6,32,64>("jacobi_HLS_sitodpeOg_U4");
    jacobi_HLS_sitodpeOg_U4->clk(ap_clk);
    jacobi_HLS_sitodpeOg_U4->reset(ap_rst);
    jacobi_HLS_sitodpeOg_U4->din0(grp_fu_251_p0);
    jacobi_HLS_sitodpeOg_U4->ce(ap_var_for_const0);
    jacobi_HLS_sitodpeOg_U4->dout(grp_fu_251_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_J_address0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_12_cast_fu_369_p1 );

    SC_METHOD(thread_J_ce0);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state59);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state61);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state62);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state63);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( exitcond_fu_514_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( exitcond_fu_514_p2 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_9_fu_348_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_exitcond1_fu_332_p2);
    sensitive << ( n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_reg_213 );

    SC_METHOD(thread_exitcond2_fu_267_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_167 );

    SC_METHOD(thread_exitcond_fu_514_p2);
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( q_reg_224 );

    SC_METHOD(thread_grp_fu_235_opcode);
    sensitive << ( tmp_10_reg_584 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_235_p0);
    sensitive << ( reg_261 );
    sensitive << ( sigma_reg_201 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_235_p1);
    sensitive << ( sigma_reg_201 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_251_p0);
    sensitive << ( J_q0 );
    sensitive << ( b_q0 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_i1_cast_fu_299_p1);
    sensitive << ( i1_reg_189 );

    SC_METHOD(thread_i_1_fu_273_p2);
    sensitive << ( i_reg_167 );

    SC_METHOD(thread_i_2_fu_308_p2);
    sensitive << ( i1_reg_189 );

    SC_METHOD(thread_isNeg_fu_422_p3);
    sensitive << ( sh_assign_fu_416_p2 );

    SC_METHOD(thread_j_1_fu_337_p2);
    sensitive << ( j_reg_213 );

    SC_METHOD(thread_mantissa_V_1_cast_fu_408_p1);
    sensitive << ( mantissa_V_fu_398_p4 );

    SC_METHOD(thread_mantissa_V_fu_398_p4);
    sensitive << ( tmp_V_1_fu_394_p1 );

    SC_METHOD(thread_p_Val2_5_fu_494_p3);
    sensitive << ( isNeg_fu_422_p3 );
    sensitive << ( tmp_13_fu_480_p1 );
    sensitive << ( tmp_14_fu_484_p4 );

    SC_METHOD(thread_p_Val2_6_fu_507_p3);
    sensitive << ( p_Result_s_reg_634 );
    sensitive << ( p_Val2_5_reg_639 );
    sensitive << ( result_V_1_fu_502_p2 );

    SC_METHOD(thread_p_Val2_s_fu_373_p1);
    sensitive << ( x_assign_reg_629 );

    SC_METHOD(thread_q_1_fu_520_p2);
    sensitive << ( q_reg_224 );

    SC_METHOD(thread_r_V_1_fu_466_p2);
    sensitive << ( mantissa_V_1_cast_fu_408_p1 );
    sensitive << ( tmp_i_i_i_7_fu_452_p1 );

    SC_METHOD(thread_r_V_fu_460_p2);
    sensitive << ( mantissa_V_fu_398_p4 );
    sensitive << ( tmp_i_i_i_cast_8_fu_456_p1 );

    SC_METHOD(thread_result_V_1_fu_502_p2);
    sensitive << ( p_Val2_5_reg_639 );

    SC_METHOD(thread_sh_assign_2_cast_fu_448_p1);
    sensitive << ( ush_fu_440_p3 );

    SC_METHOD(thread_sh_assign_fu_416_p2);
    sensitive << ( tmp_i_i_i_i_cast2_fu_412_p1 );

    SC_METHOD(thread_sigma_1_fu_362_p3);
    sensitive << ( reg_256 );
    sensitive << ( tmp_10_reg_584 );
    sensitive << ( sigma_reg_201 );

    SC_METHOD(thread_t_1_fu_293_p2);
    sensitive << ( t_reg_178 );

    SC_METHOD(thread_t_cast_fu_284_p1);
    sensitive << ( t_reg_178 );

    SC_METHOD(thread_tmp_10_fu_343_p2);
    sensitive << ( i1_cast_reg_558 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_332_p2 );
    sensitive << ( j_reg_213 );

    SC_METHOD(thread_tmp_11_cast_fu_324_p3);
    sensitive << ( tmp_5_fu_318_p2 );

    SC_METHOD(thread_tmp_11_fu_353_p1);
    sensitive << ( i1_reg_189 );

    SC_METHOD(thread_tmp_12_cast_fu_369_p1);
    sensitive << ( tmp_12_reg_594 );

    SC_METHOD(thread_tmp_12_fu_357_p2);
    sensitive << ( tmp_11_cast_reg_571 );
    sensitive << ( tmp_11_fu_353_p1 );

    SC_METHOD(thread_tmp_13_fu_480_p1);
    sensitive << ( tmp_18_fu_472_p3 );

    SC_METHOD(thread_tmp_14_fu_484_p4);
    sensitive << ( r_V_1_fu_466_p2 );

    SC_METHOD(thread_tmp_18_fu_472_p3);
    sensitive << ( r_V_fu_460_p2 );

    SC_METHOD(thread_tmp_2_fu_288_p2);
    sensitive << ( iter );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( t_cast_fu_284_p1 );

    SC_METHOD(thread_tmp_3_fu_303_p2);
    sensitive << ( n );
    sensitive << ( i1_cast_fu_299_p1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_4_fu_314_p1);
    sensitive << ( i1_reg_189 );

    SC_METHOD(thread_tmp_5_fu_318_p2);
    sensitive << ( tmp_4_fu_314_p1 );

    SC_METHOD(thread_tmp_7_fu_526_p1);
    sensitive << ( q_reg_224 );

    SC_METHOD(thread_tmp_9_fu_348_p1);
    sensitive << ( i1_reg_189 );

    SC_METHOD(thread_tmp_V_1_fu_394_p1);
    sensitive << ( p_Val2_s_fu_373_p1 );

    SC_METHOD(thread_tmp_V_fu_384_p4);
    sensitive << ( p_Val2_s_fu_373_p1 );

    SC_METHOD(thread_tmp_fu_279_p1);
    sensitive << ( i_reg_167 );

    SC_METHOD(thread_tmp_i_i_i_7_fu_452_p1);
    sensitive << ( sh_assign_2_cast_fu_448_p1 );

    SC_METHOD(thread_tmp_i_i_i_cast_8_fu_456_p1);
    sensitive << ( sh_assign_2_cast_fu_448_p1 );

    SC_METHOD(thread_tmp_i_i_i_cast_fu_436_p1);
    sensitive << ( tmp_i_i_i_fu_430_p2 );

    SC_METHOD(thread_tmp_i_i_i_fu_430_p2);
    sensitive << ( tmp_V_fu_384_p4 );

    SC_METHOD(thread_tmp_i_i_i_i_cast2_fu_412_p1);
    sensitive << ( tmp_V_fu_384_p4 );

    SC_METHOD(thread_ush_fu_440_p3);
    sensitive << ( sh_assign_fu_416_p2 );
    sensitive << ( isNeg_fu_422_p3 );
    sensitive << ( tmp_i_i_i_cast_fu_436_p1 );

    SC_METHOD(thread_x_address0);
    sensitive << ( tmp_7_reg_653 );
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_x_ce0);
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_x_d0);
    sensitive << ( x_new_q0 );
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_x_new_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_9_reg_589 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( tmp_7_fu_526_p1 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( tmp_fu_279_p1 );

    SC_METHOD(thread_x_new_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( ap_CS_fsm_state61 );

    SC_METHOD(thread_x_new_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state61 );
    sensitive << ( p_Val2_6_fu_507_p3 );

    SC_METHOD(thread_x_new_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond2_fu_267_p2 );
    sensitive << ( ap_CS_fsm_state61 );

    SC_METHOD(thread_x_we0);
    sensitive << ( ap_CS_fsm_state63 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_3_fu_303_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond1_fu_332_p2 );
    sensitive << ( ap_CS_fsm_state62 );
    sensitive << ( exitcond_fu_514_p2 );
    sensitive << ( exitcond2_fu_267_p2 );
    sensitive << ( tmp_2_fu_288_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "jacobi_HLS_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, J_address0, "(port)J_address0");
    sc_trace(mVcdFile, J_ce0, "(port)J_ce0");
    sc_trace(mVcdFile, J_q0, "(port)J_q0");
    sc_trace(mVcdFile, b_address0, "(port)b_address0");
    sc_trace(mVcdFile, b_ce0, "(port)b_ce0");
    sc_trace(mVcdFile, b_q0, "(port)b_q0");
    sc_trace(mVcdFile, n, "(port)n");
    sc_trace(mVcdFile, iter, "(port)iter");
    sc_trace(mVcdFile, x_address0, "(port)x_address0");
    sc_trace(mVcdFile, x_ce0, "(port)x_ce0");
    sc_trace(mVcdFile, x_we0, "(port)x_we0");
    sc_trace(mVcdFile, x_d0, "(port)x_d0");
    sc_trace(mVcdFile, error, "(port)error");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_235_p2, "grp_fu_235_p2");
    sc_trace(mVcdFile, reg_256, "reg_256");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_10_reg_584, "tmp_10_reg_584");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_251_p1, "grp_fu_251_p1");
    sc_trace(mVcdFile, reg_261, "reg_261");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_1_fu_273_p2, "i_1_fu_273_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, t_1_fu_293_p2, "t_1_fu_293_p2");
    sc_trace(mVcdFile, t_1_reg_553, "t_1_reg_553");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i1_cast_fu_299_p1, "i1_cast_fu_299_p1");
    sc_trace(mVcdFile, i1_cast_reg_558, "i1_cast_reg_558");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_2_fu_308_p2, "i_2_fu_308_p2");
    sc_trace(mVcdFile, i_2_reg_566, "i_2_reg_566");
    sc_trace(mVcdFile, tmp_11_cast_fu_324_p3, "tmp_11_cast_fu_324_p3");
    sc_trace(mVcdFile, tmp_11_cast_reg_571, "tmp_11_cast_reg_571");
    sc_trace(mVcdFile, tmp_3_fu_303_p2, "tmp_3_fu_303_p2");
    sc_trace(mVcdFile, j_1_fu_337_p2, "j_1_fu_337_p2");
    sc_trace(mVcdFile, j_1_reg_579, "j_1_reg_579");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_10_fu_343_p2, "tmp_10_fu_343_p2");
    sc_trace(mVcdFile, exitcond1_fu_332_p2, "exitcond1_fu_332_p2");
    sc_trace(mVcdFile, tmp_9_fu_348_p1, "tmp_9_fu_348_p1");
    sc_trace(mVcdFile, tmp_9_reg_589, "tmp_9_reg_589");
    sc_trace(mVcdFile, tmp_12_fu_357_p2, "tmp_12_fu_357_p2");
    sc_trace(mVcdFile, tmp_12_reg_594, "tmp_12_reg_594");
    sc_trace(mVcdFile, sigma_1_fu_362_p3, "sigma_1_fu_362_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, grp_fu_242_p2, "grp_fu_242_p2");
    sc_trace(mVcdFile, tmp_8_reg_624, "tmp_8_reg_624");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, grp_fu_246_p2, "grp_fu_246_p2");
    sc_trace(mVcdFile, x_assign_reg_629, "x_assign_reg_629");
    sc_trace(mVcdFile, ap_CS_fsm_state59, "ap_CS_fsm_state59");
    sc_trace(mVcdFile, p_Result_s_reg_634, "p_Result_s_reg_634");
    sc_trace(mVcdFile, ap_CS_fsm_state60, "ap_CS_fsm_state60");
    sc_trace(mVcdFile, p_Val2_5_fu_494_p3, "p_Val2_5_fu_494_p3");
    sc_trace(mVcdFile, p_Val2_5_reg_639, "p_Val2_5_reg_639");
    sc_trace(mVcdFile, q_1_fu_520_p2, "q_1_fu_520_p2");
    sc_trace(mVcdFile, q_1_reg_648, "q_1_reg_648");
    sc_trace(mVcdFile, ap_CS_fsm_state62, "ap_CS_fsm_state62");
    sc_trace(mVcdFile, tmp_7_fu_526_p1, "tmp_7_fu_526_p1");
    sc_trace(mVcdFile, tmp_7_reg_653, "tmp_7_reg_653");
    sc_trace(mVcdFile, exitcond_fu_514_p2, "exitcond_fu_514_p2");
    sc_trace(mVcdFile, x_new_address0, "x_new_address0");
    sc_trace(mVcdFile, x_new_ce0, "x_new_ce0");
    sc_trace(mVcdFile, x_new_we0, "x_new_we0");
    sc_trace(mVcdFile, x_new_d0, "x_new_d0");
    sc_trace(mVcdFile, x_new_q0, "x_new_q0");
    sc_trace(mVcdFile, i_reg_167, "i_reg_167");
    sc_trace(mVcdFile, exitcond2_fu_267_p2, "exitcond2_fu_267_p2");
    sc_trace(mVcdFile, t_reg_178, "t_reg_178");
    sc_trace(mVcdFile, i1_reg_189, "i1_reg_189");
    sc_trace(mVcdFile, ap_CS_fsm_state61, "ap_CS_fsm_state61");
    sc_trace(mVcdFile, tmp_2_fu_288_p2, "tmp_2_fu_288_p2");
    sc_trace(mVcdFile, sigma_reg_201, "sigma_reg_201");
    sc_trace(mVcdFile, j_reg_213, "j_reg_213");
    sc_trace(mVcdFile, q_reg_224, "q_reg_224");
    sc_trace(mVcdFile, ap_CS_fsm_state63, "ap_CS_fsm_state63");
    sc_trace(mVcdFile, tmp_fu_279_p1, "tmp_fu_279_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_369_p1, "tmp_12_cast_fu_369_p1");
    sc_trace(mVcdFile, p_Val2_6_fu_507_p3, "p_Val2_6_fu_507_p3");
    sc_trace(mVcdFile, grp_fu_235_p0, "grp_fu_235_p0");
    sc_trace(mVcdFile, grp_fu_235_p1, "grp_fu_235_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, grp_fu_251_p0, "grp_fu_251_p0");
    sc_trace(mVcdFile, t_cast_fu_284_p1, "t_cast_fu_284_p1");
    sc_trace(mVcdFile, tmp_4_fu_314_p1, "tmp_4_fu_314_p1");
    sc_trace(mVcdFile, tmp_5_fu_318_p2, "tmp_5_fu_318_p2");
    sc_trace(mVcdFile, tmp_11_fu_353_p1, "tmp_11_fu_353_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_373_p1, "p_Val2_s_fu_373_p1");
    sc_trace(mVcdFile, tmp_V_1_fu_394_p1, "tmp_V_1_fu_394_p1");
    sc_trace(mVcdFile, mantissa_V_fu_398_p4, "mantissa_V_fu_398_p4");
    sc_trace(mVcdFile, tmp_V_fu_384_p4, "tmp_V_fu_384_p4");
    sc_trace(mVcdFile, tmp_i_i_i_i_cast2_fu_412_p1, "tmp_i_i_i_i_cast2_fu_412_p1");
    sc_trace(mVcdFile, sh_assign_fu_416_p2, "sh_assign_fu_416_p2");
    sc_trace(mVcdFile, tmp_i_i_i_fu_430_p2, "tmp_i_i_i_fu_430_p2");
    sc_trace(mVcdFile, isNeg_fu_422_p3, "isNeg_fu_422_p3");
    sc_trace(mVcdFile, tmp_i_i_i_cast_fu_436_p1, "tmp_i_i_i_cast_fu_436_p1");
    sc_trace(mVcdFile, ush_fu_440_p3, "ush_fu_440_p3");
    sc_trace(mVcdFile, sh_assign_2_cast_fu_448_p1, "sh_assign_2_cast_fu_448_p1");
    sc_trace(mVcdFile, tmp_i_i_i_cast_8_fu_456_p1, "tmp_i_i_i_cast_8_fu_456_p1");
    sc_trace(mVcdFile, mantissa_V_1_cast_fu_408_p1, "mantissa_V_1_cast_fu_408_p1");
    sc_trace(mVcdFile, tmp_i_i_i_7_fu_452_p1, "tmp_i_i_i_7_fu_452_p1");
    sc_trace(mVcdFile, r_V_fu_460_p2, "r_V_fu_460_p2");
    sc_trace(mVcdFile, tmp_18_fu_472_p3, "tmp_18_fu_472_p3");
    sc_trace(mVcdFile, r_V_1_fu_466_p2, "r_V_1_fu_466_p2");
    sc_trace(mVcdFile, tmp_13_fu_480_p1, "tmp_13_fu_480_p1");
    sc_trace(mVcdFile, tmp_14_fu_484_p4, "tmp_14_fu_484_p4");
    sc_trace(mVcdFile, result_V_1_fu_502_p2, "result_V_1_fu_502_p2");
    sc_trace(mVcdFile, grp_fu_235_opcode, "grp_fu_235_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("jacobi_HLS.hdltvin.dat");
    mHdltvoutHandle.open("jacobi_HLS.hdltvout.dat");
}

jacobi_HLS::~jacobi_HLS() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete x_new_U;
    delete jacobi_HLS_dadddsbkb_U1;
    delete jacobi_HLS_dmul_6cud_U2;
    delete jacobi_HLS_ddiv_6dEe_U3;
    delete jacobi_HLS_sitodpeOg_U4;
}

void jacobi_HLS::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void jacobi_HLS::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_3FF0000000000000;
}

void jacobi_HLS::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_288_p2.read()))) {
        i1_reg_189 = ap_const_lv31_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        i1_reg_189 = i_2_reg_566.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_267_p2.read()))) {
        i_reg_167 = i_1_fu_273_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_167 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_303_p2.read()))) {
        j_reg_213 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_reg_213 = j_1_reg_579.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_288_p2.read()))) {
        q_reg_224 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        q_reg_224 = q_1_reg_648.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_303_p2.read()))) {
        sigma_reg_201 = ap_const_lv64_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        sigma_reg_201 = sigma_1_fu_362_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_267_p2.read()))) {
        t_reg_178 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(tmp_3_fu_303_p2.read(), ap_const_lv1_0))) {
        t_reg_178 = t_1_reg_553.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i1_cast_reg_558 = i1_cast_fu_299_p1.read();
        i_2_reg_566 = i_2_fu_308_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_1_reg_579 = j_1_fu_337_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state60.read())) {
        p_Result_s_reg_634 = p_Val2_s_fu_373_p1.read().range(63, 63);
        p_Val2_5_reg_639 = p_Val2_5_fu_494_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        q_1_reg_648 = q_1_fu_520_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
  esl_seteq<1,1,1>(tmp_10_reg_584.read(), ap_const_lv1_1)) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        reg_256 = grp_fu_235_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        reg_261 = grp_fu_251_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        t_1_reg_553 = t_1_fu_293_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond1_fu_332_p2.read(), ap_const_lv1_0))) {
        tmp_10_reg_584 = tmp_10_fu_343_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_303_p2.read()))) {
        tmp_11_cast_reg_571 = tmp_11_cast_fu_324_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_332_p2.read()))) {
        tmp_12_reg_594 = tmp_12_fu_357_p2.read();
        tmp_9_reg_589 = tmp_9_fu_348_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_514_p2.read()))) {
        tmp_7_reg_653 = tmp_7_fu_526_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        tmp_8_reg_624 = grp_fu_242_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state59.read())) {
        x_assign_reg_629 = grp_fu_246_p2.read();
    }
}

void jacobi_HLS::thread_J_address0() {
    J_address0 =  (sc_lv<4>) (tmp_12_cast_fu_369_p1.read());
}

void jacobi_HLS::thread_J_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        J_ce0 = ap_const_logic_1;
    } else {
        J_ce0 = ap_const_logic_0;
    }
}

void jacobi_HLS::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void jacobi_HLS::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void jacobi_HLS::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void jacobi_HLS::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void jacobi_HLS::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void jacobi_HLS::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void jacobi_HLS::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void jacobi_HLS::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void jacobi_HLS::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void jacobi_HLS::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void jacobi_HLS::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void jacobi_HLS::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void jacobi_HLS::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void jacobi_HLS::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void jacobi_HLS::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void jacobi_HLS::thread_ap_CS_fsm_state59() {
    ap_CS_fsm_state59 = ap_CS_fsm.read()[58];
}

void jacobi_HLS::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void jacobi_HLS::thread_ap_CS_fsm_state60() {
    ap_CS_fsm_state60 = ap_CS_fsm.read()[59];
}

void jacobi_HLS::thread_ap_CS_fsm_state61() {
    ap_CS_fsm_state61 = ap_CS_fsm.read()[60];
}

void jacobi_HLS::thread_ap_CS_fsm_state62() {
    ap_CS_fsm_state62 = ap_CS_fsm.read()[61];
}

void jacobi_HLS::thread_ap_CS_fsm_state63() {
    ap_CS_fsm_state63 = ap_CS_fsm.read()[62];
}

void jacobi_HLS::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_514_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void jacobi_HLS::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void jacobi_HLS::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_514_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void jacobi_HLS::thread_b_address0() {
    b_address0 =  (sc_lv<2>) (tmp_9_fu_348_p1.read());
}

void jacobi_HLS::thread_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void jacobi_HLS::thread_exitcond1_fu_332_p2() {
    exitcond1_fu_332_p2 = (!j_reg_213.read().is_01() || !n.read().is_01())? sc_lv<1>(): sc_lv<1>(j_reg_213.read() == n.read());
}

void jacobi_HLS::thread_exitcond2_fu_267_p2() {
    exitcond2_fu_267_p2 = (!i_reg_167.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_167.read() == ap_const_lv5_10);
}

void jacobi_HLS::thread_exitcond_fu_514_p2() {
    exitcond_fu_514_p2 = (!q_reg_224.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(q_reg_224.read() == ap_const_lv5_10);
}

void jacobi_HLS::thread_grp_fu_235_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_235_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(tmp_10_reg_584.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        grp_fu_235_opcode = ap_const_lv2_0;
    } else {
        grp_fu_235_opcode = "XX";
    }
}

void jacobi_HLS::thread_grp_fu_235_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_235_p0 = reg_261.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_235_p0 = sigma_reg_201.read();
    } else {
        grp_fu_235_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void jacobi_HLS::thread_grp_fu_235_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_235_p1 = sigma_reg_201.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_235_p1 = ap_const_lv64_0;
    } else {
        grp_fu_235_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void jacobi_HLS::thread_grp_fu_251_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        grp_fu_251_p0 = J_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_251_p0 = b_q0.read();
    } else {
        grp_fu_251_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void jacobi_HLS::thread_i1_cast_fu_299_p1() {
    i1_cast_fu_299_p1 = esl_zext<32,31>(i1_reg_189.read());
}

void jacobi_HLS::thread_i_1_fu_273_p2() {
    i_1_fu_273_p2 = (!i_reg_167.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_reg_167.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void jacobi_HLS::thread_i_2_fu_308_p2() {
    i_2_fu_308_p2 = (!i1_reg_189.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i1_reg_189.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void jacobi_HLS::thread_isNeg_fu_422_p3() {
    isNeg_fu_422_p3 = sh_assign_fu_416_p2.read().range(11, 11);
}

void jacobi_HLS::thread_j_1_fu_337_p2() {
    j_1_fu_337_p2 = (!j_reg_213.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j_reg_213.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void jacobi_HLS::thread_mantissa_V_1_cast_fu_408_p1() {
    mantissa_V_1_cast_fu_408_p1 = esl_zext<137,54>(mantissa_V_fu_398_p4.read());
}

void jacobi_HLS::thread_mantissa_V_fu_398_p4() {
    mantissa_V_fu_398_p4 = esl_concat<53,1>(esl_concat<1,52>(ap_const_lv1_1, tmp_V_1_fu_394_p1.read()), ap_const_lv1_0);
}

void jacobi_HLS::thread_p_Val2_5_fu_494_p3() {
    p_Val2_5_fu_494_p3 = (!isNeg_fu_422_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_422_p3.read()[0].to_bool())? tmp_13_fu_480_p1.read(): tmp_14_fu_484_p4.read());
}

void jacobi_HLS::thread_p_Val2_6_fu_507_p3() {
    p_Val2_6_fu_507_p3 = (!p_Result_s_reg_634.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_634.read()[0].to_bool())? result_V_1_fu_502_p2.read(): p_Val2_5_reg_639.read());
}

void jacobi_HLS::thread_p_Val2_s_fu_373_p1() {
    p_Val2_s_fu_373_p1 = x_assign_reg_629.read();
}

void jacobi_HLS::thread_q_1_fu_520_p2() {
    q_1_fu_520_p2 = (!q_reg_224.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(q_reg_224.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void jacobi_HLS::thread_r_V_1_fu_466_p2() {
    r_V_1_fu_466_p2 = (!tmp_i_i_i_7_fu_452_p1.read().is_01())? sc_lv<137>(): mantissa_V_1_cast_fu_408_p1.read() << (unsigned short)tmp_i_i_i_7_fu_452_p1.read().to_uint();
}

void jacobi_HLS::thread_r_V_fu_460_p2() {
    r_V_fu_460_p2 = (!tmp_i_i_i_cast_8_fu_456_p1.read().is_01())? sc_lv<54>(): mantissa_V_fu_398_p4.read() >> (unsigned short)tmp_i_i_i_cast_8_fu_456_p1.read().to_uint();
}

void jacobi_HLS::thread_result_V_1_fu_502_p2() {
    result_V_1_fu_502_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_5_reg_639.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_5_reg_639.read()));
}

void jacobi_HLS::thread_sh_assign_2_cast_fu_448_p1() {
    sh_assign_2_cast_fu_448_p1 = esl_sext<32,12>(ush_fu_440_p3.read());
}

void jacobi_HLS::thread_sh_assign_fu_416_p2() {
    sh_assign_fu_416_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_i_cast2_fu_412_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_i_cast2_fu_412_p1.read()));
}

void jacobi_HLS::thread_sigma_1_fu_362_p3() {
    sigma_1_fu_362_p3 = (!tmp_10_reg_584.read()[0].is_01())? sc_lv<64>(): ((tmp_10_reg_584.read()[0].to_bool())? reg_256.read(): sigma_reg_201.read());
}

void jacobi_HLS::thread_t_1_fu_293_p2() {
    t_1_fu_293_p2 = (!t_reg_178.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(t_reg_178.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void jacobi_HLS::thread_t_cast_fu_284_p1() {
    t_cast_fu_284_p1 = esl_zext<32,31>(t_reg_178.read());
}

void jacobi_HLS::thread_tmp_10_fu_343_p2() {
    tmp_10_fu_343_p2 = (!j_reg_213.read().is_01() || !i1_cast_reg_558.read().is_01())? sc_lv<1>(): sc_lv<1>(j_reg_213.read() == i1_cast_reg_558.read());
}

void jacobi_HLS::thread_tmp_11_cast_fu_324_p3() {
    tmp_11_cast_fu_324_p3 = esl_concat<4,2>(tmp_5_fu_318_p2.read(), ap_const_lv2_0);
}

void jacobi_HLS::thread_tmp_11_fu_353_p1() {
    tmp_11_fu_353_p1 = i1_reg_189.read().range(6-1, 0);
}

void jacobi_HLS::thread_tmp_12_cast_fu_369_p1() {
    tmp_12_cast_fu_369_p1 = esl_sext<64,6>(tmp_12_reg_594.read());
}

void jacobi_HLS::thread_tmp_12_fu_357_p2() {
    tmp_12_fu_357_p2 = (!tmp_11_fu_353_p1.read().is_01() || !tmp_11_cast_reg_571.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_11_fu_353_p1.read()) + sc_biguint<6>(tmp_11_cast_reg_571.read()));
}

void jacobi_HLS::thread_tmp_13_fu_480_p1() {
    tmp_13_fu_480_p1 = esl_zext<32,1>(tmp_18_fu_472_p3.read());
}

void jacobi_HLS::thread_tmp_14_fu_484_p4() {
    tmp_14_fu_484_p4 = r_V_1_fu_466_p2.read().range(84, 53);
}

void jacobi_HLS::thread_tmp_18_fu_472_p3() {
    tmp_18_fu_472_p3 = r_V_fu_460_p2.read().range(53, 53);
}

void jacobi_HLS::thread_tmp_2_fu_288_p2() {
    tmp_2_fu_288_p2 = (!t_cast_fu_284_p1.read().is_01() || !iter.read().is_01())? sc_lv<1>(): (sc_bigint<32>(t_cast_fu_284_p1.read()) < sc_bigint<32>(iter.read()));
}

void jacobi_HLS::thread_tmp_3_fu_303_p2() {
    tmp_3_fu_303_p2 = (!i1_cast_fu_299_p1.read().is_01() || !n.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i1_cast_fu_299_p1.read()) < sc_bigint<32>(n.read()));
}

void jacobi_HLS::thread_tmp_4_fu_314_p1() {
    tmp_4_fu_314_p1 = i1_reg_189.read().range(4-1, 0);
}

void jacobi_HLS::thread_tmp_5_fu_318_p2() {
    tmp_5_fu_318_p2 = (!ap_const_lv4_F.is_01() || !tmp_4_fu_314_p1.read().is_01())? sc_lv<4>(): (sc_bigint<4>(ap_const_lv4_F) + sc_biguint<4>(tmp_4_fu_314_p1.read()));
}

void jacobi_HLS::thread_tmp_7_fu_526_p1() {
    tmp_7_fu_526_p1 = esl_zext<64,5>(q_reg_224.read());
}

void jacobi_HLS::thread_tmp_9_fu_348_p1() {
    tmp_9_fu_348_p1 = esl_zext<64,31>(i1_reg_189.read());
}

void jacobi_HLS::thread_tmp_V_1_fu_394_p1() {
    tmp_V_1_fu_394_p1 = p_Val2_s_fu_373_p1.read().range(52-1, 0);
}

void jacobi_HLS::thread_tmp_V_fu_384_p4() {
    tmp_V_fu_384_p4 = p_Val2_s_fu_373_p1.read().range(62, 52);
}

void jacobi_HLS::thread_tmp_fu_279_p1() {
    tmp_fu_279_p1 = esl_zext<64,5>(i_reg_167.read());
}

void jacobi_HLS::thread_tmp_i_i_i_7_fu_452_p1() {
    tmp_i_i_i_7_fu_452_p1 = esl_zext<137,32>(sh_assign_2_cast_fu_448_p1.read());
}

void jacobi_HLS::thread_tmp_i_i_i_cast_8_fu_456_p1() {
    tmp_i_i_i_cast_8_fu_456_p1 = esl_zext<54,32>(sh_assign_2_cast_fu_448_p1.read());
}

void jacobi_HLS::thread_tmp_i_i_i_cast_fu_436_p1() {
    tmp_i_i_i_cast_fu_436_p1 = esl_sext<12,11>(tmp_i_i_i_fu_430_p2.read());
}

void jacobi_HLS::thread_tmp_i_i_i_fu_430_p2() {
    tmp_i_i_i_fu_430_p2 = (!ap_const_lv11_3FF.is_01() || !tmp_V_fu_384_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(tmp_V_fu_384_p4.read()));
}

void jacobi_HLS::thread_tmp_i_i_i_i_cast2_fu_412_p1() {
    tmp_i_i_i_i_cast2_fu_412_p1 = esl_zext<12,11>(tmp_V_fu_384_p4.read());
}

void jacobi_HLS::thread_ush_fu_440_p3() {
    ush_fu_440_p3 = (!isNeg_fu_422_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_422_p3.read()[0].to_bool())? tmp_i_i_i_cast_fu_436_p1.read(): sh_assign_fu_416_p2.read());
}

void jacobi_HLS::thread_x_address0() {
    x_address0 =  (sc_lv<4>) (tmp_7_reg_653.read());
}

void jacobi_HLS::thread_x_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        x_ce0 = ap_const_logic_1;
    } else {
        x_ce0 = ap_const_logic_0;
    }
}

void jacobi_HLS::thread_x_d0() {
    x_d0 = x_new_q0.read();
}

void jacobi_HLS::thread_x_new_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read())) {
        x_new_address0 =  (sc_lv<4>) (tmp_7_fu_526_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        x_new_address0 =  (sc_lv<4>) (tmp_9_reg_589.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        x_new_address0 =  (sc_lv<4>) (tmp_fu_279_p1.read());
    } else {
        x_new_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void jacobi_HLS::thread_x_new_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()))) {
        x_new_ce0 = ap_const_logic_1;
    } else {
        x_new_ce0 = ap_const_logic_0;
    }
}

void jacobi_HLS::thread_x_new_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read())) {
        x_new_d0 = p_Val2_6_fu_507_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        x_new_d0 = ap_const_lv32_0;
    } else {
        x_new_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void jacobi_HLS::thread_x_new_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_267_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state61.read()))) {
        x_new_we0 = ap_const_logic_1;
    } else {
        x_new_we0 = ap_const_logic_0;
    }
}

void jacobi_HLS::thread_x_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state63.read())) {
        x_we0 = ap_const_logic_1;
    } else {
        x_we0 = ap_const_logic_0;
    }
}

void jacobi_HLS::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_267_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_288_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state62;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_3_fu_303_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_332_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state52;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_fsm_state53;
            break;
        case 4503599627370496 : 
            ap_NS_fsm = ap_ST_fsm_state54;
            break;
        case 9007199254740992 : 
            ap_NS_fsm = ap_ST_fsm_state55;
            break;
        case 18014398509481984 : 
            ap_NS_fsm = ap_ST_fsm_state56;
            break;
        case 36028797018963968 : 
            ap_NS_fsm = ap_ST_fsm_state57;
            break;
        case 72057594037927936 : 
            ap_NS_fsm = ap_ST_fsm_state58;
            break;
        case 144115188075855872 : 
            ap_NS_fsm = ap_ST_fsm_state59;
            break;
        case 288230376151711744 : 
            ap_NS_fsm = ap_ST_fsm_state60;
            break;
        case 576460752303423488 : 
            ap_NS_fsm = ap_ST_fsm_state61;
            break;
        case 1152921504606846976 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 2305843009213693952 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state62.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_514_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state63;
            }
            break;
        case 4611686018427387904 : 
            ap_NS_fsm = ap_ST_fsm_state62;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<63>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void jacobi_HLS::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"J_address0\" :  \"" << J_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"J_ce0\" :  \"" << J_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"J_q0\" :  \"" << J_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_address0\" :  \"" << b_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"b_ce0\" :  \"" << b_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"b_q0\" :  \"" << b_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"n\" :  \"" << n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"iter\" :  \"" << iter.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_address0\" :  \"" << x_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_ce0\" :  \"" << x_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_we0\" :  \"" << x_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"x_d0\" :  \"" << x_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"error\" :  \"" << error.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

