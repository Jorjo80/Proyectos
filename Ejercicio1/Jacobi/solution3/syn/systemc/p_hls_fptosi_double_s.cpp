// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "p_hls_fptosi_double_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic p_hls_fptosi_double_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic p_hls_fptosi_double_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> p_hls_fptosi_double_s::ap_ST_fsm_state1 = "1";
const sc_lv<2> p_hls_fptosi_double_s::ap_ST_fsm_state2 = "10";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_3F = "111111";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_34 = "110100";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_3E = "111110";
const sc_lv<1> p_hls_fptosi_double_s::ap_const_lv1_1 = "1";
const sc_lv<1> p_hls_fptosi_double_s::ap_const_lv1_0 = "0";
const sc_lv<12> p_hls_fptosi_double_s::ap_const_lv12_C01 = "110000000001";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_B = "1011";
const sc_lv<11> p_hls_fptosi_double_s::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_35 = "110101";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_54 = "1010100";
const sc_lv<32> p_hls_fptosi_double_s::ap_const_lv32_1 = "1";
const bool p_hls_fptosi_double_s::ap_const_boolean_1 = true;

p_hls_fptosi_double_s::p_hls_fptosi_double_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( p_Result_s_reg_185 );
    sensitive << ( p_Val2_5_reg_190 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( result_V_1_fu_174_p2 );

    SC_METHOD(thread_isNeg_fu_94_p3);
    sensitive << ( sh_assign_fu_88_p2 );

    SC_METHOD(thread_mantissa_V_1_cast_fu_80_p1);
    sensitive << ( mantissa_V_fu_70_p4 );

    SC_METHOD(thread_mantissa_V_fu_70_p4);
    sensitive << ( tmp_V_1_fu_66_p1 );

    SC_METHOD(thread_p_Val2_5_fu_166_p3);
    sensitive << ( isNeg_fu_94_p3 );
    sensitive << ( tmp_s_fu_152_p1 );
    sensitive << ( tmp_65_fu_156_p4 );

    SC_METHOD(thread_p_Val2_s_fu_44_p1);
    sensitive << ( x );

    SC_METHOD(thread_r_V_1_fu_138_p2);
    sensitive << ( mantissa_V_1_cast_fu_80_p1 );
    sensitive << ( tmp_i_i_79_fu_124_p1 );

    SC_METHOD(thread_r_V_fu_132_p2);
    sensitive << ( mantissa_V_fu_70_p4 );
    sensitive << ( tmp_i_i_cast_80_fu_128_p1 );

    SC_METHOD(thread_result_V_1_fu_174_p2);
    sensitive << ( p_Val2_5_reg_190 );

    SC_METHOD(thread_sh_assign_2_cast_fu_120_p1);
    sensitive << ( ush_fu_112_p3 );

    SC_METHOD(thread_sh_assign_fu_88_p2);
    sensitive << ( tmp_i_i_i_cast1_fu_84_p1 );

    SC_METHOD(thread_tmp_65_fu_156_p4);
    sensitive << ( r_V_1_fu_138_p2 );

    SC_METHOD(thread_tmp_V_1_fu_66_p1);
    sensitive << ( p_Val2_s_fu_44_p1 );

    SC_METHOD(thread_tmp_V_fu_56_p4);
    sensitive << ( p_Val2_s_fu_44_p1 );

    SC_METHOD(thread_tmp_fu_144_p3);
    sensitive << ( r_V_fu_132_p2 );

    SC_METHOD(thread_tmp_i_i_79_fu_124_p1);
    sensitive << ( sh_assign_2_cast_fu_120_p1 );

    SC_METHOD(thread_tmp_i_i_cast_80_fu_128_p1);
    sensitive << ( sh_assign_2_cast_fu_120_p1 );

    SC_METHOD(thread_tmp_i_i_cast_fu_108_p1);
    sensitive << ( tmp_i_i_fu_102_p2 );

    SC_METHOD(thread_tmp_i_i_fu_102_p2);
    sensitive << ( tmp_V_fu_56_p4 );

    SC_METHOD(thread_tmp_i_i_i_cast1_fu_84_p1);
    sensitive << ( tmp_V_fu_56_p4 );

    SC_METHOD(thread_tmp_s_fu_152_p1);
    sensitive << ( tmp_fu_144_p3 );

    SC_METHOD(thread_ush_fu_112_p3);
    sensitive << ( sh_assign_fu_88_p2 );
    sensitive << ( isNeg_fu_94_p3 );
    sensitive << ( tmp_i_i_cast_fu_108_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    ap_CS_fsm = "01";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "p_hls_fptosi_double_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_Result_s_reg_185, "p_Result_s_reg_185");
    sc_trace(mVcdFile, p_Val2_5_fu_166_p3, "p_Val2_5_fu_166_p3");
    sc_trace(mVcdFile, p_Val2_5_reg_190, "p_Val2_5_reg_190");
    sc_trace(mVcdFile, p_Val2_s_fu_44_p1, "p_Val2_s_fu_44_p1");
    sc_trace(mVcdFile, tmp_V_1_fu_66_p1, "tmp_V_1_fu_66_p1");
    sc_trace(mVcdFile, mantissa_V_fu_70_p4, "mantissa_V_fu_70_p4");
    sc_trace(mVcdFile, tmp_V_fu_56_p4, "tmp_V_fu_56_p4");
    sc_trace(mVcdFile, tmp_i_i_i_cast1_fu_84_p1, "tmp_i_i_i_cast1_fu_84_p1");
    sc_trace(mVcdFile, sh_assign_fu_88_p2, "sh_assign_fu_88_p2");
    sc_trace(mVcdFile, tmp_i_i_fu_102_p2, "tmp_i_i_fu_102_p2");
    sc_trace(mVcdFile, isNeg_fu_94_p3, "isNeg_fu_94_p3");
    sc_trace(mVcdFile, tmp_i_i_cast_fu_108_p1, "tmp_i_i_cast_fu_108_p1");
    sc_trace(mVcdFile, ush_fu_112_p3, "ush_fu_112_p3");
    sc_trace(mVcdFile, sh_assign_2_cast_fu_120_p1, "sh_assign_2_cast_fu_120_p1");
    sc_trace(mVcdFile, tmp_i_i_cast_80_fu_128_p1, "tmp_i_i_cast_80_fu_128_p1");
    sc_trace(mVcdFile, mantissa_V_1_cast_fu_80_p1, "mantissa_V_1_cast_fu_80_p1");
    sc_trace(mVcdFile, tmp_i_i_79_fu_124_p1, "tmp_i_i_79_fu_124_p1");
    sc_trace(mVcdFile, r_V_fu_132_p2, "r_V_fu_132_p2");
    sc_trace(mVcdFile, tmp_fu_144_p3, "tmp_fu_144_p3");
    sc_trace(mVcdFile, r_V_1_fu_138_p2, "r_V_1_fu_138_p2");
    sc_trace(mVcdFile, tmp_s_fu_152_p1, "tmp_s_fu_152_p1");
    sc_trace(mVcdFile, tmp_65_fu_156_p4, "tmp_65_fu_156_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, result_V_1_fu_174_p2, "result_V_1_fu_174_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

p_hls_fptosi_double_s::~p_hls_fptosi_double_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void p_hls_fptosi_double_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_Result_s_reg_185 = p_Val2_s_fu_44_p1.read().range(63, 63);
        p_Val2_5_reg_190 = p_Val2_5_fu_166_p3.read();
    }
}

void p_hls_fptosi_double_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void p_hls_fptosi_double_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void p_hls_fptosi_double_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void p_hls_fptosi_double_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void p_hls_fptosi_double_s::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void p_hls_fptosi_double_s::thread_ap_return() {
    ap_return = (!p_Result_s_reg_185.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_185.read()[0].to_bool())? result_V_1_fu_174_p2.read(): p_Val2_5_reg_190.read());
}

void p_hls_fptosi_double_s::thread_isNeg_fu_94_p3() {
    isNeg_fu_94_p3 = sh_assign_fu_88_p2.read().range(11, 11);
}

void p_hls_fptosi_double_s::thread_mantissa_V_1_cast_fu_80_p1() {
    mantissa_V_1_cast_fu_80_p1 = esl_zext<137,54>(mantissa_V_fu_70_p4.read());
}

void p_hls_fptosi_double_s::thread_mantissa_V_fu_70_p4() {
    mantissa_V_fu_70_p4 = esl_concat<53,1>(esl_concat<1,52>(ap_const_lv1_1, tmp_V_1_fu_66_p1.read()), ap_const_lv1_0);
}

void p_hls_fptosi_double_s::thread_p_Val2_5_fu_166_p3() {
    p_Val2_5_fu_166_p3 = (!isNeg_fu_94_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_94_p3.read()[0].to_bool())? tmp_s_fu_152_p1.read(): tmp_65_fu_156_p4.read());
}

void p_hls_fptosi_double_s::thread_p_Val2_s_fu_44_p1() {
    p_Val2_s_fu_44_p1 = x.read();
}

void p_hls_fptosi_double_s::thread_r_V_1_fu_138_p2() {
    r_V_1_fu_138_p2 = (!tmp_i_i_79_fu_124_p1.read().is_01())? sc_lv<137>(): mantissa_V_1_cast_fu_80_p1.read() << (unsigned short)tmp_i_i_79_fu_124_p1.read().to_uint();
}

void p_hls_fptosi_double_s::thread_r_V_fu_132_p2() {
    r_V_fu_132_p2 = (!tmp_i_i_cast_80_fu_128_p1.read().is_01())? sc_lv<54>(): mantissa_V_fu_70_p4.read() >> (unsigned short)tmp_i_i_cast_80_fu_128_p1.read().to_uint();
}

void p_hls_fptosi_double_s::thread_result_V_1_fu_174_p2() {
    result_V_1_fu_174_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_5_reg_190.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_5_reg_190.read()));
}

void p_hls_fptosi_double_s::thread_sh_assign_2_cast_fu_120_p1() {
    sh_assign_2_cast_fu_120_p1 = esl_sext<32,12>(ush_fu_112_p3.read());
}

void p_hls_fptosi_double_s::thread_sh_assign_fu_88_p2() {
    sh_assign_fu_88_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_cast1_fu_84_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_cast1_fu_84_p1.read()));
}

void p_hls_fptosi_double_s::thread_tmp_65_fu_156_p4() {
    tmp_65_fu_156_p4 = r_V_1_fu_138_p2.read().range(84, 53);
}

void p_hls_fptosi_double_s::thread_tmp_V_1_fu_66_p1() {
    tmp_V_1_fu_66_p1 = p_Val2_s_fu_44_p1.read().range(52-1, 0);
}

void p_hls_fptosi_double_s::thread_tmp_V_fu_56_p4() {
    tmp_V_fu_56_p4 = p_Val2_s_fu_44_p1.read().range(62, 52);
}

void p_hls_fptosi_double_s::thread_tmp_fu_144_p3() {
    tmp_fu_144_p3 = r_V_fu_132_p2.read().range(53, 53);
}

void p_hls_fptosi_double_s::thread_tmp_i_i_79_fu_124_p1() {
    tmp_i_i_79_fu_124_p1 = esl_zext<137,32>(sh_assign_2_cast_fu_120_p1.read());
}

void p_hls_fptosi_double_s::thread_tmp_i_i_cast_80_fu_128_p1() {
    tmp_i_i_cast_80_fu_128_p1 = esl_zext<54,32>(sh_assign_2_cast_fu_120_p1.read());
}

void p_hls_fptosi_double_s::thread_tmp_i_i_cast_fu_108_p1() {
    tmp_i_i_cast_fu_108_p1 = esl_sext<12,11>(tmp_i_i_fu_102_p2.read());
}

void p_hls_fptosi_double_s::thread_tmp_i_i_fu_102_p2() {
    tmp_i_i_fu_102_p2 = (!ap_const_lv11_3FF.is_01() || !tmp_V_fu_56_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(tmp_V_fu_56_p4.read()));
}

void p_hls_fptosi_double_s::thread_tmp_i_i_i_cast1_fu_84_p1() {
    tmp_i_i_i_cast1_fu_84_p1 = esl_zext<12,11>(tmp_V_fu_56_p4.read());
}

void p_hls_fptosi_double_s::thread_tmp_s_fu_152_p1() {
    tmp_s_fu_152_p1 = esl_zext<32,1>(tmp_fu_144_p3.read());
}

void p_hls_fptosi_double_s::thread_ush_fu_112_p3() {
    ush_fu_112_p3 = (!isNeg_fu_94_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_94_p3.read()[0].to_bool())? tmp_i_i_cast_fu_108_p1.read(): sh_assign_fu_88_p2.read());
}

void p_hls_fptosi_double_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}

