// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "producer_jacobi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const bool producer_jacobi::ap_const_boolean_1 = true;
const sc_lv<1> producer_jacobi::ap_const_lv1_0 = "0";
const sc_lv<1> producer_jacobi::ap_const_lv1_1 = "1";
const sc_lv<5> producer_jacobi::ap_const_lv5_0 = "00000";
const sc_lv<3> producer_jacobi::ap_const_lv3_0 = "000";
const sc_lv<64> producer_jacobi::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_logic producer_jacobi::ap_const_logic_0 = sc_dt::Log_0;
const sc_logic producer_jacobi::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<32> producer_jacobi::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> producer_jacobi::ap_const_lv32_1 = "1";
const sc_lv<64> producer_jacobi::ap_const_lv64_3FF0000000000000 = "11111111110000000000000000000000000000000000000000000000000000";
const sc_lv<5> producer_jacobi::ap_const_lv5_10 = "10000";
const sc_lv<3> producer_jacobi::ap_const_lv3_4 = "100";
const sc_lv<3> producer_jacobi::ap_const_lv3_7 = "111";
const sc_lv<32> producer_jacobi::ap_const_lv32_3F = "111111";
const sc_lv<32> producer_jacobi::ap_const_lv32_34 = "110100";
const sc_lv<32> producer_jacobi::ap_const_lv32_3E = "111110";
const sc_lv<12> producer_jacobi::ap_const_lv12_C01 = "110000000001";
const sc_lv<32> producer_jacobi::ap_const_lv32_B = "1011";
const sc_lv<11> producer_jacobi::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> producer_jacobi::ap_const_lv32_35 = "110101";
const sc_lv<32> producer_jacobi::ap_const_lv32_54 = "1010100";
const sc_lv<2> producer_jacobi::ap_const_lv2_0 = "00";
const sc_lv<2> producer_jacobi::ap_const_lv2_1 = "1";

producer_jacobi::producer_jacobi(sc_module_name name) : sc_module(name), mVcdFile(0) {
    producer_x_m_if_Val_U = new producer_jacobi_pbkb("producer_x_m_if_Val_U");
    producer_x_m_if_Val_U->clk(ap_clk);
    producer_x_m_if_Val_U->reset(ap_rst);
    producer_x_m_if_Val_U->address0(producer_x_m_if_Val_address0);
    producer_x_m_if_Val_U->ce0(producer_x_m_if_Val_ce0);
    producer_x_m_if_Val_U->we0(producer_x_m_if_Val_we0);
    producer_x_m_if_Val_U->d0(x_new_q0);
    producer_A_m_if_Val_U = new producer_jacobi_pcud("producer_A_m_if_Val_U");
    producer_A_m_if_Val_U->clk(ap_clk);
    producer_A_m_if_Val_U->reset(ap_rst);
    producer_A_m_if_Val_U->address0(producer_A_m_if_Val_s_reg_657);
    producer_A_m_if_Val_U->ce0(producer_A_m_if_Val_ce0);
    producer_A_m_if_Val_U->q0(producer_A_m_if_Val_q0);
    producer_b_m_if_Val_U = new producer_jacobi_pdEe("producer_b_m_if_Val_U");
    producer_b_m_if_Val_U->clk(ap_clk);
    producer_b_m_if_Val_U->reset(ap_rst);
    producer_b_m_if_Val_U->address0(producer_b_m_if_Val_address0);
    producer_b_m_if_Val_U->ce0(producer_b_m_if_Val_ce0);
    producer_b_m_if_Val_U->q0(producer_b_m_if_Val_q0);
    x_prev_U = new producer_jacobi_xeOg("x_prev_U");
    x_prev_U->clk(ap_clk);
    x_prev_U->reset(ap_rst);
    x_prev_U->address0(x_prev_address0);
    x_prev_U->ce0(x_prev_ce0);
    x_prev_U->we0(x_prev_we0);
    x_prev_U->d0(x_prev_d0);
    x_prev_U->q0(x_prev_q0);
    x_new_U = new producer_jacobi_xeOg("x_new_U");
    x_new_U->clk(ap_clk);
    x_new_U->reset(ap_rst);
    x_new_U->address0(x_new_address0);
    x_new_U->ce0(x_new_ce0);
    x_new_U->we0(x_new_we0);
    x_new_U->d0(x_new_d0);
    x_new_U->q0(x_new_q0);
    producer_jacobi_dg8j_U1 = new producer_jacobi_dg8j<1,5,64,64,64>("producer_jacobi_dg8j_U1");
    producer_jacobi_dg8j_U1->clk(ap_clk);
    producer_jacobi_dg8j_U1->reset(ap_rst);
    producer_jacobi_dg8j_U1->din0(grp_fu_317_p0);
    producer_jacobi_dg8j_U1->din1(grp_fu_317_p1);
    producer_jacobi_dg8j_U1->opcode(grp_fu_317_opcode);
    producer_jacobi_dg8j_U1->ce(ap_var_for_const0);
    producer_jacobi_dg8j_U1->dout(grp_fu_317_p2);
    producer_jacobi_dhbi_U2 = new producer_jacobi_dhbi<1,6,64,64,64>("producer_jacobi_dhbi_U2");
    producer_jacobi_dhbi_U2->clk(ap_clk);
    producer_jacobi_dhbi_U2->reset(ap_rst);
    producer_jacobi_dhbi_U2->din0(reg_343);
    producer_jacobi_dhbi_U2->din1(reg_350);
    producer_jacobi_dhbi_U2->ce(ap_var_for_const0);
    producer_jacobi_dhbi_U2->dout(grp_fu_324_p2);
    producer_jacobi_dibs_U3 = new producer_jacobi_dibs<1,31,64,64,64>("producer_jacobi_dibs_U3");
    producer_jacobi_dibs_U3->clk(ap_clk);
    producer_jacobi_dibs_U3->reset(ap_rst);
    producer_jacobi_dibs_U3->din0(ap_var_for_const1);
    producer_jacobi_dibs_U3->din1(tmp_14_reg_698);
    producer_jacobi_dibs_U3->ce(ap_var_for_const0);
    producer_jacobi_dibs_U3->dout(grp_fu_328_p2);
    producer_jacobi_sjbC_U4 = new producer_jacobi_sjbC<1,6,32,64>("producer_jacobi_sjbC_U4");
    producer_jacobi_sjbC_U4->clk(ap_clk);
    producer_jacobi_sjbC_U4->reset(ap_rst);
    producer_jacobi_sjbC_U4->din0(grp_fu_333_p0);
    producer_jacobi_sjbC_U4->ce(ap_var_for_const0);
    producer_jacobi_sjbC_U4->dout(grp_fu_333_p1);

    SC_METHOD(thread_i2_reg_246);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_p_Result_s_reg_708);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_p_Val2_5_reg_713);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_producer_A_m_if_Val_s_reg_657);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_reg_338);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_reg_343);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_reg_350);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_sigma_reg_258);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_tmp_14_reg_698);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_tmp_18_reg_683);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_tmp_1_reg_293);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_tmp_2_reg_627);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_tmp_5_reg_727);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_tmp_6_reg_742);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_tmp_7_reg_748);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_tmp_9_reg_645);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_x_assign_reg_703);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_x_prev_load_1_reg_662);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_phi_mux_i1_phi_fu_239_p4);

    SC_METHOD(thread_ap_phi_mux_i2_phi_fu_250_p4);

    SC_METHOD(thread_ap_phi_mux_i3_phi_fu_310_p4);

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_228_p4);

    SC_METHOD(thread_exitcond2_fu_374_p2);
    sensitive << ( ap_phi_mux_i1_phi_fu_239_p4 );

    SC_METHOD(thread_exitcond3_fu_391_p2);
    sensitive << ( ap_phi_mux_i2_phi_fu_250_p4 );

    SC_METHOD(thread_exitcond_fu_583_p2);
    sensitive << ( ap_phi_mux_i3_phi_fu_310_p4 );

    SC_METHOD(thread_grp_fu_317_opcode);

    SC_METHOD(thread_grp_fu_317_p0);
    sensitive << ( reg_343 );
    sensitive << ( sigma_reg_258 );
    sensitive << ( tmp_1_reg_293 );

    SC_METHOD(thread_grp_fu_317_p1);
    sensitive << ( reg_343 );
    sensitive << ( sigma_reg_258 );

    SC_METHOD(thread_grp_fu_333_p0);
    sensitive << ( producer_A_m_if_Val_q0 );
    sensitive << ( producer_b_m_if_Val_q0 );
    sensitive << ( tmp_18_reg_683 );
    sensitive << ( tmp_7_reg_748 );

    SC_METHOD(thread_isNeg_fu_491_p3);
    sensitive << ( sh_assign_fu_485_p2 );

    SC_METHOD(thread_mantissa_V_1_cast_fu_477_p1);
    sensitive << ( mantissa_V_fu_467_p4 );

    SC_METHOD(thread_mantissa_V_fu_467_p4);
    sensitive << ( tmp_V_1_fu_463_p1 );

    SC_METHOD(thread_p_Val2_5_fu_563_p3);
    sensitive << ( isNeg_fu_491_p3 );
    sensitive << ( tmp_15_fu_549_p1 );
    sensitive << ( tmp_16_fu_553_p4 );

    SC_METHOD(thread_p_Val2_6_fu_576_p3);
    sensitive << ( p_Result_s_reg_708 );
    sensitive << ( p_Val2_5_reg_713 );
    sensitive << ( result_V_1_fu_571_p2 );

    SC_METHOD(thread_p_Val2_s_fu_442_p1);
    sensitive << ( x_assign_reg_703 );

    SC_METHOD(thread_producer_A_m_if_Val_ce0);

    SC_METHOD(thread_producer_b_m_if_Val_address0);
    sensitive << ( tmp_9_reg_645 );

    SC_METHOD(thread_producer_b_m_if_Val_ce0);

    SC_METHOD(thread_producer_x_m_if_Val_address0);
    sensitive << ( tmp_5_reg_727 );

    SC_METHOD(thread_producer_x_m_if_Val_ce0);

    SC_METHOD(thread_producer_x_m_if_Val_we0);

    SC_METHOD(thread_r_V_1_fu_535_p2);
    sensitive << ( mantissa_V_1_cast_fu_477_p1 );
    sensitive << ( tmp_i_i_i_10_fu_521_p1 );

    SC_METHOD(thread_r_V_fu_529_p2);
    sensitive << ( mantissa_V_fu_467_p4 );
    sensitive << ( tmp_i_i_i_cast_11_fu_525_p1 );

    SC_METHOD(thread_result_V_1_fu_571_p2);
    sensitive << ( p_Val2_5_reg_713 );

    SC_METHOD(thread_sh_assign_2_cast_fu_517_p1);
    sensitive << ( ush_fu_509_p3 );

    SC_METHOD(thread_sh_assign_fu_485_p2);
    sensitive << ( tmp_i_i_i_i_cast2_fu_481_p1 );

    SC_METHOD(thread_tmp_15_fu_549_p1);
    sensitive << ( tmp_23_fu_541_p3 );

    SC_METHOD(thread_tmp_16_fu_553_p4);
    sensitive << ( r_V_1_fu_535_p2 );

    SC_METHOD(thread_tmp_18_fu_437_p2);
    sensitive << ( reg_338 );
    sensitive << ( x_prev_load_1_reg_662 );

    SC_METHOD(thread_tmp_23_fu_541_p3);
    sensitive << ( r_V_fu_529_p2 );

    SC_METHOD(thread_tmp_2_fu_386_p1);
    sensitive << ( ap_phi_mux_i1_phi_fu_239_p4 );

    SC_METHOD(thread_tmp_4_fu_414_p1);
    sensitive << ( tmp_s_fu_408_p2 );

    SC_METHOD(thread_tmp_5_fu_595_p1);
    sensitive << ( ap_phi_mux_i3_phi_fu_310_p4 );

    SC_METHOD(thread_tmp_6_fu_601_p2);
    sensitive << ( x_prev_q0 );
    sensitive << ( x_new_q0 );

    SC_METHOD(thread_tmp_7_fu_607_p2);
    sensitive << ( tmp_6_reg_742 );

    SC_METHOD(thread_tmp_9_fu_403_p1);
    sensitive << ( ap_phi_mux_i2_phi_fu_250_p4 );

    SC_METHOD(thread_tmp_V_1_fu_463_p1);
    sensitive << ( p_Val2_s_fu_442_p1 );

    SC_METHOD(thread_tmp_V_fu_453_p4);
    sensitive << ( p_Val2_s_fu_442_p1 );

    SC_METHOD(thread_tmp_fu_368_p1);
    sensitive << ( ap_phi_mux_i_phi_fu_228_p4 );

    SC_METHOD(thread_tmp_i_i_i_10_fu_521_p1);
    sensitive << ( sh_assign_2_cast_fu_517_p1 );

    SC_METHOD(thread_tmp_i_i_i_cast_11_fu_525_p1);
    sensitive << ( sh_assign_2_cast_fu_517_p1 );

    SC_METHOD(thread_tmp_i_i_i_cast_fu_505_p1);
    sensitive << ( tmp_i_i_i_fu_499_p2 );

    SC_METHOD(thread_tmp_i_i_i_fu_499_p2);
    sensitive << ( tmp_V_fu_453_p4 );

    SC_METHOD(thread_tmp_i_i_i_i_cast2_fu_481_p1);
    sensitive << ( tmp_V_fu_453_p4 );

    SC_METHOD(thread_tmp_s_fu_408_p2);
    sensitive << ( i2_reg_246 );

    SC_METHOD(thread_ush_fu_509_p3);
    sensitive << ( sh_assign_fu_485_p2 );
    sensitive << ( isNeg_fu_491_p3 );
    sensitive << ( tmp_i_i_i_cast_fu_505_p1 );

    SC_METHOD(thread_x_new_address0);
    sensitive << ( tmp_2_fu_386_p1 );
    sensitive << ( tmp_9_reg_645 );
    sensitive << ( tmp_5_fu_595_p1 );
    sensitive << ( tmp_fu_368_p1 );

    SC_METHOD(thread_x_new_ce0);

    SC_METHOD(thread_x_new_d0);
    sensitive << ( p_Val2_6_fu_576_p3 );

    SC_METHOD(thread_x_new_we0);

    SC_METHOD(thread_x_prev_address0);
    sensitive << ( tmp_2_reg_627 );
    sensitive << ( tmp_9_fu_403_p1 );
    sensitive << ( tmp_5_fu_595_p1 );
    sensitive << ( tmp_fu_368_p1 );

    SC_METHOD(thread_x_prev_ce0);

    SC_METHOD(thread_x_prev_d0);
    sensitive << ( x_new_q0 );

    SC_METHOD(thread_x_prev_we0);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_sc_inter_clock.posedge_event() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "producer_jacobi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, producer_x_m_if_Val_address0, "producer_x_m_if_Val_address0");
    sc_trace(mVcdFile, producer_x_m_if_Val_ce0, "producer_x_m_if_Val_ce0");
    sc_trace(mVcdFile, producer_x_m_if_Val_we0, "producer_x_m_if_Val_we0");
    sc_trace(mVcdFile, producer_A_m_if_Val_ce0, "producer_A_m_if_Val_ce0");
    sc_trace(mVcdFile, producer_A_m_if_Val_q0, "producer_A_m_if_Val_q0");
    sc_trace(mVcdFile, producer_b_m_if_Val_address0, "producer_b_m_if_Val_address0");
    sc_trace(mVcdFile, producer_b_m_if_Val_ce0, "producer_b_m_if_Val_ce0");
    sc_trace(mVcdFile, producer_b_m_if_Val_q0, "producer_b_m_if_Val_q0");
    sc_trace(mVcdFile, reg_338, "reg_338");
    sc_trace(mVcdFile, grp_fu_333_p1, "grp_fu_333_p1");
    sc_trace(mVcdFile, reg_343, "reg_343");
    sc_trace(mVcdFile, grp_fu_317_p2, "grp_fu_317_p2");
    sc_trace(mVcdFile, reg_350, "reg_350");
    sc_trace(mVcdFile, tmp_2_fu_386_p1, "tmp_2_fu_386_p1");
    sc_trace(mVcdFile, tmp_2_reg_627, "tmp_2_reg_627");
    sc_trace(mVcdFile, exitcond2_fu_374_p2, "exitcond2_fu_374_p2");
    sc_trace(mVcdFile, tmp_9_fu_403_p1, "tmp_9_fu_403_p1");
    sc_trace(mVcdFile, tmp_9_reg_645, "tmp_9_reg_645");
    sc_trace(mVcdFile, exitcond3_fu_391_p2, "exitcond3_fu_391_p2");
    sc_trace(mVcdFile, producer_A_m_if_Val_s_reg_657, "producer_A_m_if_Val_s_reg_657");
    sc_trace(mVcdFile, x_prev_q0, "x_prev_q0");
    sc_trace(mVcdFile, x_prev_load_1_reg_662, "x_prev_load_1_reg_662");
    sc_trace(mVcdFile, tmp_18_fu_437_p2, "tmp_18_fu_437_p2");
    sc_trace(mVcdFile, tmp_18_reg_683, "tmp_18_reg_683");
    sc_trace(mVcdFile, grp_fu_324_p2, "grp_fu_324_p2");
    sc_trace(mVcdFile, tmp_14_reg_698, "tmp_14_reg_698");
    sc_trace(mVcdFile, grp_fu_328_p2, "grp_fu_328_p2");
    sc_trace(mVcdFile, x_assign_reg_703, "x_assign_reg_703");
    sc_trace(mVcdFile, p_Result_s_reg_708, "p_Result_s_reg_708");
    sc_trace(mVcdFile, p_Val2_5_fu_563_p3, "p_Val2_5_fu_563_p3");
    sc_trace(mVcdFile, p_Val2_5_reg_713, "p_Val2_5_reg_713");
    sc_trace(mVcdFile, tmp_5_fu_595_p1, "tmp_5_fu_595_p1");
    sc_trace(mVcdFile, tmp_5_reg_727, "tmp_5_reg_727");
    sc_trace(mVcdFile, exitcond_fu_583_p2, "exitcond_fu_583_p2");
    sc_trace(mVcdFile, tmp_6_fu_601_p2, "tmp_6_fu_601_p2");
    sc_trace(mVcdFile, tmp_6_reg_742, "tmp_6_reg_742");
    sc_trace(mVcdFile, tmp_7_fu_607_p2, "tmp_7_fu_607_p2");
    sc_trace(mVcdFile, tmp_7_reg_748, "tmp_7_reg_748");
    sc_trace(mVcdFile, x_prev_address0, "x_prev_address0");
    sc_trace(mVcdFile, x_prev_ce0, "x_prev_ce0");
    sc_trace(mVcdFile, x_prev_we0, "x_prev_we0");
    sc_trace(mVcdFile, x_prev_d0, "x_prev_d0");
    sc_trace(mVcdFile, x_new_address0, "x_new_address0");
    sc_trace(mVcdFile, x_new_ce0, "x_new_ce0");
    sc_trace(mVcdFile, x_new_we0, "x_new_we0");
    sc_trace(mVcdFile, x_new_d0, "x_new_d0");
    sc_trace(mVcdFile, x_new_q0, "x_new_q0");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_228_p4, "ap_phi_mux_i_phi_fu_228_p4");
    sc_trace(mVcdFile, ap_phi_mux_i1_phi_fu_239_p4, "ap_phi_mux_i1_phi_fu_239_p4");
    sc_trace(mVcdFile, ap_phi_mux_i2_phi_fu_250_p4, "ap_phi_mux_i2_phi_fu_250_p4");
    sc_trace(mVcdFile, ap_phi_mux_i3_phi_fu_310_p4, "ap_phi_mux_i3_phi_fu_310_p4");
    sc_trace(mVcdFile, tmp_fu_368_p1, "tmp_fu_368_p1");
    sc_trace(mVcdFile, tmp_4_fu_414_p1, "tmp_4_fu_414_p1");
    sc_trace(mVcdFile, p_Val2_6_fu_576_p3, "p_Val2_6_fu_576_p3");
    sc_trace(mVcdFile, grp_fu_317_p0, "grp_fu_317_p0");
    sc_trace(mVcdFile, sigma_reg_258, "sigma_reg_258");
    sc_trace(mVcdFile, tmp_1_reg_293, "tmp_1_reg_293");
    sc_trace(mVcdFile, grp_fu_317_p1, "grp_fu_317_p1");
    sc_trace(mVcdFile, grp_fu_333_p0, "grp_fu_333_p0");
    sc_trace(mVcdFile, i2_reg_246, "i2_reg_246");
    sc_trace(mVcdFile, tmp_s_fu_408_p2, "tmp_s_fu_408_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_442_p1, "p_Val2_s_fu_442_p1");
    sc_trace(mVcdFile, tmp_V_1_fu_463_p1, "tmp_V_1_fu_463_p1");
    sc_trace(mVcdFile, mantissa_V_fu_467_p4, "mantissa_V_fu_467_p4");
    sc_trace(mVcdFile, tmp_V_fu_453_p4, "tmp_V_fu_453_p4");
    sc_trace(mVcdFile, tmp_i_i_i_i_cast2_fu_481_p1, "tmp_i_i_i_i_cast2_fu_481_p1");
    sc_trace(mVcdFile, sh_assign_fu_485_p2, "sh_assign_fu_485_p2");
    sc_trace(mVcdFile, tmp_i_i_i_fu_499_p2, "tmp_i_i_i_fu_499_p2");
    sc_trace(mVcdFile, isNeg_fu_491_p3, "isNeg_fu_491_p3");
    sc_trace(mVcdFile, tmp_i_i_i_cast_fu_505_p1, "tmp_i_i_i_cast_fu_505_p1");
    sc_trace(mVcdFile, ush_fu_509_p3, "ush_fu_509_p3");
    sc_trace(mVcdFile, sh_assign_2_cast_fu_517_p1, "sh_assign_2_cast_fu_517_p1");
    sc_trace(mVcdFile, tmp_i_i_i_cast_11_fu_525_p1, "tmp_i_i_i_cast_11_fu_525_p1");
    sc_trace(mVcdFile, mantissa_V_1_cast_fu_477_p1, "mantissa_V_1_cast_fu_477_p1");
    sc_trace(mVcdFile, tmp_i_i_i_10_fu_521_p1, "tmp_i_i_i_10_fu_521_p1");
    sc_trace(mVcdFile, r_V_fu_529_p2, "r_V_fu_529_p2");
    sc_trace(mVcdFile, tmp_23_fu_541_p3, "tmp_23_fu_541_p3");
    sc_trace(mVcdFile, r_V_1_fu_535_p2, "r_V_1_fu_535_p2");
    sc_trace(mVcdFile, tmp_15_fu_549_p1, "tmp_15_fu_549_p1");
    sc_trace(mVcdFile, tmp_16_fu_553_p4, "tmp_16_fu_553_p4");
    sc_trace(mVcdFile, result_V_1_fu_571_p2, "result_V_1_fu_571_p2");
    sc_trace(mVcdFile, grp_fu_317_opcode, "grp_fu_317_opcode");
#endif

    }
    mHdltvinHandle.open("producer_jacobi.hdltvin.dat");
    mHdltvoutHandle.open("producer_jacobi.hdltvout.dat");
}

producer_jacobi::~producer_jacobi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete producer_x_m_if_Val_U;
    delete producer_A_m_if_Val_U;
    delete producer_b_m_if_Val_U;
    delete x_prev_U;
    delete x_new_U;
    delete producer_jacobi_dg8j_U1;
    delete producer_jacobi_dhbi_U2;
    delete producer_jacobi_dibs_U3;
    delete producer_jacobi_sjbC_U4;
}

void producer_jacobi::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void producer_jacobi::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_3FF0000000000000;
}

void producer_jacobi::thread_i2_reg_246() {
    i2_reg_246 = ap_const_lv3_0;
}

void producer_jacobi::thread_p_Result_s_reg_708() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_Result_s_reg_708 = p_Val2_s_fu_442_p1.read().range(63, 63);
    }
}

void producer_jacobi::thread_p_Val2_5_reg_713() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        p_Val2_5_reg_713 = p_Val2_5_fu_563_p3.read();
    }
}

void producer_jacobi::thread_producer_A_m_if_Val_s_reg_657() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        producer_A_m_if_Val_s_reg_657 =  (sc_lv<2>) (tmp_4_fu_414_p1.read());
    }
}

void producer_jacobi::thread_reg_338() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        reg_338 =  (sc_lv<32>) (producer_A_m_if_Val_q0.read());
    }
}

void producer_jacobi::thread_reg_343() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        reg_343 = grp_fu_333_p1.read();
    }
}

void producer_jacobi::thread_reg_350() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        reg_350 = grp_fu_317_p2.read();
    }
}

void producer_jacobi::thread_sigma_reg_258() {
    sigma_reg_258 = ap_const_lv64_0;
}

void producer_jacobi::thread_tmp_14_reg_698() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        tmp_14_reg_698 = grp_fu_324_p2.read();
    }
}

void producer_jacobi::thread_tmp_18_reg_683() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        tmp_18_reg_683 = tmp_18_fu_437_p2.read();
    }
}

void producer_jacobi::thread_tmp_1_reg_293() {
    tmp_1_reg_293 = ap_const_lv64_0;
}

void producer_jacobi::thread_tmp_2_reg_627() {
    if (esl_seteq<1,1,1>(exitcond2_fu_374_p2.read(), ap_const_lv1_0)) {
        tmp_2_reg_627 = tmp_2_fu_386_p1.read();
    }
}

void producer_jacobi::thread_tmp_5_reg_727() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_583_p2.read())) {
        tmp_5_reg_727 = tmp_5_fu_595_p1.read();
    }
}

void producer_jacobi::thread_tmp_6_reg_742() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        tmp_6_reg_742 = tmp_6_fu_601_p2.read();
    }
}

void producer_jacobi::thread_tmp_7_reg_748() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        tmp_7_reg_748 = tmp_7_fu_607_p2.read();
    }
}

void producer_jacobi::thread_tmp_9_reg_645() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_391_p2.read())) {
        tmp_9_reg_645 = tmp_9_fu_403_p1.read();
    }
}

void producer_jacobi::thread_x_assign_reg_703() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        x_assign_reg_703 = grp_fu_328_p2.read();
    }
}

void producer_jacobi::thread_x_prev_load_1_reg_662() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        x_prev_load_1_reg_662 = x_prev_q0.read();
    }
}

void producer_jacobi::thread_ap_phi_mux_i1_phi_fu_239_p4() {
    ap_phi_mux_i1_phi_fu_239_p4 = ap_const_lv5_0;
}

void producer_jacobi::thread_ap_phi_mux_i2_phi_fu_250_p4() {
    ap_phi_mux_i2_phi_fu_250_p4 = ap_const_lv3_0;
}

void producer_jacobi::thread_ap_phi_mux_i3_phi_fu_310_p4() {
    ap_phi_mux_i3_phi_fu_310_p4 = ap_const_lv5_0;
}

void producer_jacobi::thread_ap_phi_mux_i_phi_fu_228_p4() {
    ap_phi_mux_i_phi_fu_228_p4 = ap_const_lv5_0;
}

void producer_jacobi::thread_exitcond2_fu_374_p2() {
    exitcond2_fu_374_p2 = (!ap_phi_mux_i1_phi_fu_239_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i1_phi_fu_239_p4.read() == ap_const_lv5_10);
}

void producer_jacobi::thread_exitcond3_fu_391_p2() {
    exitcond3_fu_391_p2 = (!ap_phi_mux_i2_phi_fu_250_p4.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i2_phi_fu_250_p4.read() == ap_const_lv3_4);
}

void producer_jacobi::thread_exitcond_fu_583_p2() {
    exitcond_fu_583_p2 = (!ap_phi_mux_i3_phi_fu_310_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i3_phi_fu_310_p4.read() == ap_const_lv5_10);
}

void producer_jacobi::thread_grp_fu_317_opcode() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_317_opcode = ap_const_lv2_1;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_317_opcode = ap_const_lv2_0;
        } else {
            grp_fu_317_opcode = "XX";
        }
    } else {
        grp_fu_317_opcode = "XX";
    }
}

void producer_jacobi::thread_grp_fu_317_p0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_317_p0 = tmp_1_reg_293.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_317_p0 = reg_343.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_317_p0 = sigma_reg_258.read();
        } else {
            grp_fu_317_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_317_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void producer_jacobi::thread_grp_fu_317_p1() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_317_p1 = sigma_reg_258.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_317_p1 = reg_343.read();
        } else {
            grp_fu_317_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_317_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void producer_jacobi::thread_grp_fu_333_p0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_333_p0 = tmp_7_reg_748.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_333_p0 =  (sc_lv<32>) (producer_A_m_if_Val_q0.read());
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_333_p0 = producer_b_m_if_Val_q0.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            grp_fu_333_p0 = tmp_18_reg_683.read();
        } else {
            grp_fu_333_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        grp_fu_333_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void producer_jacobi::thread_isNeg_fu_491_p3() {
    isNeg_fu_491_p3 = sh_assign_fu_485_p2.read().range(11, 11);
}

void producer_jacobi::thread_mantissa_V_1_cast_fu_477_p1() {
    mantissa_V_1_cast_fu_477_p1 = esl_zext<137,54>(mantissa_V_fu_467_p4.read());
}

void producer_jacobi::thread_mantissa_V_fu_467_p4() {
    mantissa_V_fu_467_p4 = esl_concat<53,1>(esl_concat<1,52>(ap_const_lv1_1, tmp_V_1_fu_463_p1.read()), ap_const_lv1_0);
}

void producer_jacobi::thread_p_Val2_5_fu_563_p3() {
    p_Val2_5_fu_563_p3 = (!isNeg_fu_491_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_491_p3.read()[0].to_bool())? tmp_15_fu_549_p1.read(): tmp_16_fu_553_p4.read());
}

void producer_jacobi::thread_p_Val2_6_fu_576_p3() {
    p_Val2_6_fu_576_p3 = (!p_Result_s_reg_708.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_708.read()[0].to_bool())? result_V_1_fu_571_p2.read(): p_Val2_5_reg_713.read());
}

void producer_jacobi::thread_p_Val2_s_fu_442_p1() {
    p_Val2_s_fu_442_p1 = x_assign_reg_703.read();
}

void producer_jacobi::thread_producer_A_m_if_Val_ce0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        producer_A_m_if_Val_ce0 = ap_const_logic_1;
    } else {
        producer_A_m_if_Val_ce0 = ap_const_logic_0;
    }
}

void producer_jacobi::thread_producer_b_m_if_Val_address0() {
    producer_b_m_if_Val_address0 =  (sc_lv<2>) (tmp_9_reg_645.read());
}

void producer_jacobi::thread_producer_b_m_if_Val_ce0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        producer_b_m_if_Val_ce0 = ap_const_logic_1;
    } else {
        producer_b_m_if_Val_ce0 = ap_const_logic_0;
    }
}

void producer_jacobi::thread_producer_x_m_if_Val_address0() {
    producer_x_m_if_Val_address0 =  (sc_lv<4>) (tmp_5_reg_727.read());
}

void producer_jacobi::thread_producer_x_m_if_Val_ce0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        producer_x_m_if_Val_ce0 = ap_const_logic_1;
    } else {
        producer_x_m_if_Val_ce0 = ap_const_logic_0;
    }
}

void producer_jacobi::thread_producer_x_m_if_Val_we0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        producer_x_m_if_Val_we0 = ap_const_logic_1;
    } else {
        producer_x_m_if_Val_we0 = ap_const_logic_0;
    }
}

void producer_jacobi::thread_r_V_1_fu_535_p2() {
    r_V_1_fu_535_p2 = (!tmp_i_i_i_10_fu_521_p1.read().is_01())? sc_lv<137>(): mantissa_V_1_cast_fu_477_p1.read() << (unsigned short)tmp_i_i_i_10_fu_521_p1.read().to_uint();
}

void producer_jacobi::thread_r_V_fu_529_p2() {
    r_V_fu_529_p2 = (!tmp_i_i_i_cast_11_fu_525_p1.read().is_01())? sc_lv<54>(): mantissa_V_fu_467_p4.read() >> (unsigned short)tmp_i_i_i_cast_11_fu_525_p1.read().to_uint();
}

void producer_jacobi::thread_result_V_1_fu_571_p2() {
    result_V_1_fu_571_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_5_reg_713.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_5_reg_713.read()));
}

void producer_jacobi::thread_sh_assign_2_cast_fu_517_p1() {
    sh_assign_2_cast_fu_517_p1 = esl_sext<32,12>(ush_fu_509_p3.read());
}

void producer_jacobi::thread_sh_assign_fu_485_p2() {
    sh_assign_fu_485_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_i_cast2_fu_481_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_i_cast2_fu_481_p1.read()));
}

void producer_jacobi::thread_tmp_15_fu_549_p1() {
    tmp_15_fu_549_p1 = esl_zext<32,1>(tmp_23_fu_541_p3.read());
}

void producer_jacobi::thread_tmp_16_fu_553_p4() {
    tmp_16_fu_553_p4 = r_V_1_fu_535_p2.read().range(84, 53);
}

void producer_jacobi::thread_tmp_18_fu_437_p2() {
    tmp_18_fu_437_p2 = (!reg_338.read().is_01() || !x_prev_load_1_reg_662.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_338.read()) * sc_bigint<32>(x_prev_load_1_reg_662.read());
}

void producer_jacobi::thread_tmp_23_fu_541_p3() {
    tmp_23_fu_541_p3 = r_V_fu_529_p2.read().range(53, 53);
}

void producer_jacobi::thread_tmp_2_fu_386_p1() {
    tmp_2_fu_386_p1 = esl_zext<64,5>(ap_phi_mux_i1_phi_fu_239_p4.read());
}

void producer_jacobi::thread_tmp_4_fu_414_p1() {
    tmp_4_fu_414_p1 = esl_sext<64,3>(tmp_s_fu_408_p2.read());
}

void producer_jacobi::thread_tmp_5_fu_595_p1() {
    tmp_5_fu_595_p1 = esl_zext<64,5>(ap_phi_mux_i3_phi_fu_310_p4.read());
}

void producer_jacobi::thread_tmp_6_fu_601_p2() {
    tmp_6_fu_601_p2 = (!x_new_q0.read().is_01() || !x_prev_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(x_new_q0.read()) - sc_biguint<32>(x_prev_q0.read()));
}

void producer_jacobi::thread_tmp_7_fu_607_p2() {
    tmp_7_fu_607_p2 = (!tmp_6_reg_742.read().is_01() || !tmp_6_reg_742.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_6_reg_742.read()) * sc_bigint<32>(tmp_6_reg_742.read());
}

void producer_jacobi::thread_tmp_9_fu_403_p1() {
    tmp_9_fu_403_p1 = esl_zext<64,3>(ap_phi_mux_i2_phi_fu_250_p4.read());
}

void producer_jacobi::thread_tmp_V_1_fu_463_p1() {
    tmp_V_1_fu_463_p1 = p_Val2_s_fu_442_p1.read().range(52-1, 0);
}

void producer_jacobi::thread_tmp_V_fu_453_p4() {
    tmp_V_fu_453_p4 = p_Val2_s_fu_442_p1.read().range(62, 52);
}

void producer_jacobi::thread_tmp_fu_368_p1() {
    tmp_fu_368_p1 = esl_zext<64,5>(ap_phi_mux_i_phi_fu_228_p4.read());
}

void producer_jacobi::thread_tmp_i_i_i_10_fu_521_p1() {
    tmp_i_i_i_10_fu_521_p1 = esl_zext<137,32>(sh_assign_2_cast_fu_517_p1.read());
}

void producer_jacobi::thread_tmp_i_i_i_cast_11_fu_525_p1() {
    tmp_i_i_i_cast_11_fu_525_p1 = esl_zext<54,32>(sh_assign_2_cast_fu_517_p1.read());
}

void producer_jacobi::thread_tmp_i_i_i_cast_fu_505_p1() {
    tmp_i_i_i_cast_fu_505_p1 = esl_sext<12,11>(tmp_i_i_i_fu_499_p2.read());
}

void producer_jacobi::thread_tmp_i_i_i_fu_499_p2() {
    tmp_i_i_i_fu_499_p2 = (!ap_const_lv11_3FF.is_01() || !tmp_V_fu_453_p4.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(tmp_V_fu_453_p4.read()));
}

void producer_jacobi::thread_tmp_i_i_i_i_cast2_fu_481_p1() {
    tmp_i_i_i_i_cast2_fu_481_p1 = esl_zext<12,11>(tmp_V_fu_453_p4.read());
}

void producer_jacobi::thread_tmp_s_fu_408_p2() {
    tmp_s_fu_408_p2 = (!i2_reg_246.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<3>(): (sc_biguint<3>(i2_reg_246.read()) + sc_bigint<3>(ap_const_lv3_7));
}

void producer_jacobi::thread_ush_fu_509_p3() {
    ush_fu_509_p3 = (!isNeg_fu_491_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_491_p3.read()[0].to_bool())? tmp_i_i_i_cast_fu_505_p1.read(): sh_assign_fu_485_p2.read());
}

void producer_jacobi::thread_x_new_address0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_new_address0 =  (sc_lv<4>) (tmp_5_fu_595_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_new_address0 =  (sc_lv<4>) (tmp_9_reg_645.read());
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_new_address0 =  (sc_lv<4>) (tmp_2_fu_386_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_new_address0 =  (sc_lv<4>) (tmp_fu_368_p1.read());
        } else {
            x_new_address0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        x_new_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void producer_jacobi::thread_x_new_ce0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        x_new_ce0 = ap_const_logic_1;
    } else {
        x_new_ce0 = ap_const_logic_0;
    }
}

void producer_jacobi::thread_x_new_d0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_new_d0 = p_Val2_6_fu_576_p3.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_new_d0 = ap_const_lv32_1;
        } else {
            x_new_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        x_new_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void producer_jacobi::thread_x_new_we0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        x_new_we0 = ap_const_logic_1;
    } else {
        x_new_we0 = ap_const_logic_0;
    }
}

void producer_jacobi::thread_x_prev_address0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_prev_address0 =  (sc_lv<4>) (tmp_5_fu_595_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_prev_address0 =  (sc_lv<4>) (tmp_9_fu_403_p1.read());
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_prev_address0 =  (sc_lv<4>) (tmp_2_reg_627.read());
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_prev_address0 =  (sc_lv<4>) (tmp_fu_368_p1.read());
        } else {
            x_prev_address0 =  (sc_lv<4>) ("XXXX");
        }
    } else {
        x_prev_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void producer_jacobi::thread_x_prev_ce0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        x_prev_ce0 = ap_const_logic_1;
    } else {
        x_prev_ce0 = ap_const_logic_0;
    }
}

void producer_jacobi::thread_x_prev_d0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_prev_d0 = x_new_q0.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            x_prev_d0 = ap_const_lv32_0;
        } else {
            x_prev_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        x_prev_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void producer_jacobi::thread_x_prev_we0() {
    if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
        x_prev_we0 = ap_const_logic_1;
    } else {
        x_prev_we0 = ap_const_logic_0;
    }
}

void producer_jacobi::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

