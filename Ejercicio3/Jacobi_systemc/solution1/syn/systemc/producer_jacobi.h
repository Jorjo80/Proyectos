// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _producer_jacobi_HH_
#define _producer_jacobi_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "producer_jacobi_dg8j.h"
#include "producer_jacobi_dhbi.h"
#include "producer_jacobi_dibs.h"
#include "producer_jacobi_sjbC.h"
#include "producer_jacobi_pbkb.h"
#include "producer_jacobi_pcud.h"
#include "producer_jacobi_pdEe.h"
#include "producer_jacobi_xeOg.h"

namespace ap_rtl {

struct producer_jacobi : public sc_module {
    // Port declarations 2
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;
    // Internal clock declarations for combination SystemC design. 
    sc_clock ap_sc_inter_clock;


    // Module declarations
    producer_jacobi(sc_module_name name);
    SC_HAS_PROCESS(producer_jacobi);

    ~producer_jacobi();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    producer_jacobi_pbkb* producer_x_m_if_Val_U;
    producer_jacobi_pcud* producer_A_m_if_Val_U;
    producer_jacobi_pdEe* producer_b_m_if_Val_U;
    producer_jacobi_xeOg* x_prev_U;
    producer_jacobi_xeOg* x_new_U;
    producer_jacobi_dg8j<1,5,64,64,64>* producer_jacobi_dg8j_U1;
    producer_jacobi_dhbi<1,6,64,64,64>* producer_jacobi_dhbi_U2;
    producer_jacobi_dibs<1,31,64,64,64>* producer_jacobi_dibs_U3;
    producer_jacobi_sjbC<1,6,32,64>* producer_jacobi_sjbC_U4;
    sc_signal< sc_lv<4> > producer_x_m_if_Val_address0;
    sc_signal< sc_logic > producer_x_m_if_Val_ce0;
    sc_signal< sc_logic > producer_x_m_if_Val_we0;
    sc_signal< sc_logic > producer_A_m_if_Val_ce0;
    sc_signal< sc_lv<0> > producer_A_m_if_Val_q0;
    sc_signal< sc_lv<2> > producer_b_m_if_Val_address0;
    sc_signal< sc_logic > producer_b_m_if_Val_ce0;
    sc_signal< sc_lv<32> > producer_b_m_if_Val_q0;
    sc_signal< sc_lv<32> > reg_338;
    sc_signal< sc_lv<64> > grp_fu_333_p1;
    sc_signal< sc_lv<64> > reg_343;
    sc_signal< sc_lv<64> > grp_fu_317_p2;
    sc_signal< sc_lv<64> > reg_350;
    sc_signal< sc_lv<64> > tmp_2_fu_386_p1;
    sc_signal< sc_lv<64> > tmp_2_reg_627;
    sc_signal< sc_lv<1> > exitcond2_fu_374_p2;
    sc_signal< sc_lv<64> > tmp_9_fu_403_p1;
    sc_signal< sc_lv<64> > tmp_9_reg_645;
    sc_signal< sc_lv<1> > exitcond3_fu_391_p2;
    sc_signal< sc_lv<2> > producer_A_m_if_Val_s_reg_657;
    sc_signal< sc_lv<32> > x_prev_q0;
    sc_signal< sc_lv<32> > x_prev_load_1_reg_662;
    sc_signal< sc_lv<32> > tmp_18_fu_437_p2;
    sc_signal< sc_lv<32> > tmp_18_reg_683;
    sc_signal< sc_lv<64> > grp_fu_324_p2;
    sc_signal< sc_lv<64> > tmp_14_reg_698;
    sc_signal< sc_lv<64> > grp_fu_328_p2;
    sc_signal< sc_lv<64> > x_assign_reg_703;
    sc_signal< sc_lv<1> > p_Result_s_reg_708;
    sc_signal< sc_lv<32> > p_Val2_5_fu_563_p3;
    sc_signal< sc_lv<32> > p_Val2_5_reg_713;
    sc_signal< sc_lv<64> > tmp_5_fu_595_p1;
    sc_signal< sc_lv<64> > tmp_5_reg_727;
    sc_signal< sc_lv<1> > exitcond_fu_583_p2;
    sc_signal< sc_lv<32> > tmp_6_fu_601_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_742;
    sc_signal< sc_lv<32> > tmp_7_fu_607_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_748;
    sc_signal< sc_lv<4> > x_prev_address0;
    sc_signal< sc_logic > x_prev_ce0;
    sc_signal< sc_logic > x_prev_we0;
    sc_signal< sc_lv<32> > x_prev_d0;
    sc_signal< sc_lv<4> > x_new_address0;
    sc_signal< sc_logic > x_new_ce0;
    sc_signal< sc_logic > x_new_we0;
    sc_signal< sc_lv<32> > x_new_d0;
    sc_signal< sc_lv<32> > x_new_q0;
    sc_signal< sc_lv<5> > ap_phi_mux_i_phi_fu_228_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_i1_phi_fu_239_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_i2_phi_fu_250_p4;
    sc_signal< sc_lv<5> > ap_phi_mux_i3_phi_fu_310_p4;
    sc_signal< sc_lv<64> > tmp_fu_368_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_414_p1;
    sc_signal< sc_lv<32> > p_Val2_6_fu_576_p3;
    sc_signal< sc_lv<64> > grp_fu_317_p0;
    sc_signal< sc_lv<64> > sigma_reg_258;
    sc_signal< sc_lv<64> > tmp_1_reg_293;
    sc_signal< sc_lv<64> > grp_fu_317_p1;
    sc_signal< sc_lv<32> > grp_fu_333_p0;
    sc_signal< sc_lv<3> > i2_reg_246;
    sc_signal< sc_lv<3> > tmp_s_fu_408_p2;
    sc_signal< sc_lv<64> > p_Val2_s_fu_442_p1;
    sc_signal< sc_lv<52> > tmp_V_1_fu_463_p1;
    sc_signal< sc_lv<54> > mantissa_V_fu_467_p4;
    sc_signal< sc_lv<11> > tmp_V_fu_453_p4;
    sc_signal< sc_lv<12> > tmp_i_i_i_i_cast2_fu_481_p1;
    sc_signal< sc_lv<12> > sh_assign_fu_485_p2;
    sc_signal< sc_lv<11> > tmp_i_i_i_fu_499_p2;
    sc_signal< sc_lv<1> > isNeg_fu_491_p3;
    sc_signal< sc_lv<12> > tmp_i_i_i_cast_fu_505_p1;
    sc_signal< sc_lv<12> > ush_fu_509_p3;
    sc_signal< sc_lv<32> > sh_assign_2_cast_fu_517_p1;
    sc_signal< sc_lv<54> > tmp_i_i_i_cast_11_fu_525_p1;
    sc_signal< sc_lv<137> > mantissa_V_1_cast_fu_477_p1;
    sc_signal< sc_lv<137> > tmp_i_i_i_10_fu_521_p1;
    sc_signal< sc_lv<54> > r_V_fu_529_p2;
    sc_signal< sc_lv<1> > tmp_23_fu_541_p3;
    sc_signal< sc_lv<137> > r_V_1_fu_535_p2;
    sc_signal< sc_lv<32> > tmp_15_fu_549_p1;
    sc_signal< sc_lv<32> > tmp_16_fu_553_p4;
    sc_signal< sc_lv<32> > result_V_1_fu_571_p2;
    sc_signal< sc_lv<2> > grp_fu_317_opcode;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_logic ap_const_logic_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_3FF0000000000000;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_34;
    static const sc_lv<32> ap_const_lv32_3E;
    static const sc_lv<12> ap_const_lv12_C01;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<11> ap_const_lv11_3FF;
    static const sc_lv<32> ap_const_lv32_35;
    static const sc_lv<32> ap_const_lv32_54;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_i2_reg_246();
    void thread_p_Result_s_reg_708();
    void thread_p_Val2_5_reg_713();
    void thread_producer_A_m_if_Val_s_reg_657();
    void thread_reg_338();
    void thread_reg_343();
    void thread_reg_350();
    void thread_sigma_reg_258();
    void thread_tmp_14_reg_698();
    void thread_tmp_18_reg_683();
    void thread_tmp_1_reg_293();
    void thread_tmp_2_reg_627();
    void thread_tmp_5_reg_727();
    void thread_tmp_6_reg_742();
    void thread_tmp_7_reg_748();
    void thread_tmp_9_reg_645();
    void thread_x_assign_reg_703();
    void thread_x_prev_load_1_reg_662();
    void thread_ap_phi_mux_i1_phi_fu_239_p4();
    void thread_ap_phi_mux_i2_phi_fu_250_p4();
    void thread_ap_phi_mux_i3_phi_fu_310_p4();
    void thread_ap_phi_mux_i_phi_fu_228_p4();
    void thread_exitcond2_fu_374_p2();
    void thread_exitcond3_fu_391_p2();
    void thread_exitcond_fu_583_p2();
    void thread_grp_fu_317_opcode();
    void thread_grp_fu_317_p0();
    void thread_grp_fu_317_p1();
    void thread_grp_fu_333_p0();
    void thread_isNeg_fu_491_p3();
    void thread_mantissa_V_1_cast_fu_477_p1();
    void thread_mantissa_V_fu_467_p4();
    void thread_p_Val2_5_fu_563_p3();
    void thread_p_Val2_6_fu_576_p3();
    void thread_p_Val2_s_fu_442_p1();
    void thread_producer_A_m_if_Val_ce0();
    void thread_producer_b_m_if_Val_address0();
    void thread_producer_b_m_if_Val_ce0();
    void thread_producer_x_m_if_Val_address0();
    void thread_producer_x_m_if_Val_ce0();
    void thread_producer_x_m_if_Val_we0();
    void thread_r_V_1_fu_535_p2();
    void thread_r_V_fu_529_p2();
    void thread_result_V_1_fu_571_p2();
    void thread_sh_assign_2_cast_fu_517_p1();
    void thread_sh_assign_fu_485_p2();
    void thread_tmp_15_fu_549_p1();
    void thread_tmp_16_fu_553_p4();
    void thread_tmp_18_fu_437_p2();
    void thread_tmp_23_fu_541_p3();
    void thread_tmp_2_fu_386_p1();
    void thread_tmp_4_fu_414_p1();
    void thread_tmp_5_fu_595_p1();
    void thread_tmp_6_fu_601_p2();
    void thread_tmp_7_fu_607_p2();
    void thread_tmp_9_fu_403_p1();
    void thread_tmp_V_1_fu_463_p1();
    void thread_tmp_V_fu_453_p4();
    void thread_tmp_fu_368_p1();
    void thread_tmp_i_i_i_10_fu_521_p1();
    void thread_tmp_i_i_i_cast_11_fu_525_p1();
    void thread_tmp_i_i_i_cast_fu_505_p1();
    void thread_tmp_i_i_i_fu_499_p2();
    void thread_tmp_i_i_i_i_cast2_fu_481_p1();
    void thread_tmp_s_fu_408_p2();
    void thread_ush_fu_509_p3();
    void thread_x_new_address0();
    void thread_x_new_ce0();
    void thread_x_new_d0();
    void thread_x_new_we0();
    void thread_x_prev_address0();
    void thread_x_prev_ce0();
    void thread_x_prev_d0();
    void thread_x_prev_we0();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
